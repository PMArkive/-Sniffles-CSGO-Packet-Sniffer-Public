// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessages_public.proto

#ifndef PROTOBUF_netmessages_5fpublic_2eproto__INCLUDED
#define PROTOBUF_netmessages_5fpublic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_netmessages_5fpublic_2eproto();
void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

class CMsgQAngle;
class CMsgRGBA;
class CMsgVector;
class CMsgVector2D;
class CMsg_CVars;
class CMsg_CVars_CVar;
class CNETMsg_Disconnect;
class CNETMsg_File;
class CNETMsg_NOP;
class CNETMsg_SetConVar;
class CNETMsg_SignonState;
class CNETMsg_StringCmd;
class CNETMsg_Tick;
class CSVCMsg_BSPDecal;
class CSVCMsg_ClassInfo;
class CSVCMsg_ClassInfo_class_t;
class CSVCMsg_CreateStringTable;
class CSVCMsg_CrosshairAngle;
class CSVCMsg_FixAngle;
class CSVCMsg_GameEvent;
class CSVCMsg_GameEventList;
class CSVCMsg_GameEventList_descriptor_t;
class CSVCMsg_GameEventList_key_t;
class CSVCMsg_GameEvent_key_t;
class CSVCMsg_GetCvarValue;
class CSVCMsg_Menu;
class CSVCMsg_PacketEntities;
class CSVCMsg_Prefetch;
class CSVCMsg_Print;
class CSVCMsg_SendTable;
class CSVCMsg_SendTable_sendprop_t;
class CSVCMsg_ServerInfo;
class CSVCMsg_SetPause;
class CSVCMsg_SetView;
class CSVCMsg_Sounds;
class CSVCMsg_Sounds_sounddata_t;
class CSVCMsg_TempEntities;
class CSVCMsg_UpdateStringTable;
class CSVCMsg_UserMessage;
class CSVCMsg_VoiceData;
class CSVCMsg_VoiceInit;

enum NET_Messages {
  net_NOP = 0,
  net_Disconnect = 1,
  net_File = 2,
  net_Tick = 4,
  net_StringCmd = 5,
  net_SetConVar = 6,
  net_SignonState = 7
};
bool NET_Messages_IsValid(int value);
const NET_Messages NET_Messages_MIN = net_NOP;
const NET_Messages NET_Messages_MAX = net_SignonState;
const int NET_Messages_ARRAYSIZE = NET_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* NET_Messages_descriptor();
inline const ::std::string& NET_Messages_Name(NET_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    NET_Messages_descriptor(), value);
}
inline bool NET_Messages_Parse(
    const ::std::string& name, NET_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NET_Messages>(
    NET_Messages_descriptor(), name, value);
}
enum SVC_Messages {
  svc_ServerInfo = 8,
  svc_SendTable = 9,
  svc_ClassInfo = 10,
  svc_SetPause = 11,
  svc_CreateStringTable = 12,
  svc_UpdateStringTable = 13,
  svc_VoiceInit = 14,
  svc_VoiceData = 15,
  svc_Print = 16,
  svc_Sounds = 17,
  svc_SetView = 18,
  svc_FixAngle = 19,
  svc_CrosshairAngle = 20,
  svc_BSPDecal = 21,
  svc_UserMessage = 23,
  svc_GameEvent = 25,
  svc_PacketEntities = 26,
  svc_TempEntities = 27,
  svc_Prefetch = 28,
  svc_Menu = 29,
  svc_GameEventList = 30,
  svc_GetCvarValue = 31
};
bool SVC_Messages_IsValid(int value);
const SVC_Messages SVC_Messages_MIN = svc_ServerInfo;
const SVC_Messages SVC_Messages_MAX = svc_GetCvarValue;
const int SVC_Messages_ARRAYSIZE = SVC_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* SVC_Messages_descriptor();
inline const ::std::string& SVC_Messages_Name(SVC_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    SVC_Messages_descriptor(), value);
}
inline bool SVC_Messages_Parse(
    const ::std::string& name, SVC_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SVC_Messages>(
    SVC_Messages_descriptor(), name, value);
}
// ===================================================================

class CMsgVector : public ::google::protobuf::Message {
 public:
  CMsgVector();
  virtual ~CMsgVector();

  CMsgVector(const CMsgVector& from);

  inline CMsgVector& operator=(const CMsgVector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector& default_instance();

  void Swap(CMsgVector* other);

  // implements Message ----------------------------------------------

  inline CMsgVector* New() const { return New(NULL); }

  CMsgVector* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector& from);
  void MergeFrom(const CMsgVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector* default_instance_;
};
// -------------------------------------------------------------------

class CMsgVector2D : public ::google::protobuf::Message {
 public:
  CMsgVector2D();
  virtual ~CMsgVector2D();

  CMsgVector2D(const CMsgVector2D& from);

  inline CMsgVector2D& operator=(const CMsgVector2D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector2D& default_instance();

  void Swap(CMsgVector2D* other);

  // implements Message ----------------------------------------------

  inline CMsgVector2D* New() const { return New(NULL); }

  CMsgVector2D* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector2D& from);
  void MergeFrom(const CMsgVector2D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgVector2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector2D)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector2D* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQAngle : public ::google::protobuf::Message {
 public:
  CMsgQAngle();
  virtual ~CMsgQAngle();

  CMsgQAngle(const CMsgQAngle& from);

  inline CMsgQAngle& operator=(const CMsgQAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQAngle& default_instance();

  void Swap(CMsgQAngle* other);

  // implements Message ----------------------------------------------

  inline CMsgQAngle* New() const { return New(NULL); }

  CMsgQAngle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQAngle& from);
  void MergeFrom(const CMsgQAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgQAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgQAngle)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsgQAngle* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRGBA : public ::google::protobuf::Message {
 public:
  CMsgRGBA();
  virtual ~CMsgRGBA();

  CMsgRGBA(const CMsgRGBA& from);

  inline CMsgRGBA& operator=(const CMsgRGBA& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRGBA& default_instance();

  void Swap(CMsgRGBA* other);

  // implements Message ----------------------------------------------

  inline CMsgRGBA* New() const { return New(NULL); }

  CMsgRGBA* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRGBA& from);
  void MergeFrom(const CMsgRGBA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgRGBA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 r = 1;
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 1;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // optional int32 g = 2;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 2;
  ::google::protobuf::int32 g() const;
  void set_g(::google::protobuf::int32 value);

  // optional int32 b = 3;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 3;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // optional int32 a = 4;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 4;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgRGBA)
 private:
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_g();
  inline void clear_has_g();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_a();
  inline void clear_has_a();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 g_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 a_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsgRGBA* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Tick : public ::google::protobuf::Message {
 public:
  CNETMsg_Tick();
  virtual ~CNETMsg_Tick();

  CNETMsg_Tick(const CNETMsg_Tick& from);

  inline CNETMsg_Tick& operator=(const CNETMsg_Tick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Tick& default_instance();

  void Swap(CNETMsg_Tick* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_Tick* New() const { return New(NULL); }

  CNETMsg_Tick* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Tick& from);
  void MergeFrom(const CNETMsg_Tick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_Tick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::uint32 tick() const;
  void set_tick(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime = 4;
  bool has_host_computationtime() const;
  void clear_host_computationtime();
  static const int kHostComputationtimeFieldNumber = 4;
  ::google::protobuf::uint32 host_computationtime() const;
  void set_host_computationtime(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime_std_deviation = 5;
  bool has_host_computationtime_std_deviation() const;
  void clear_host_computationtime_std_deviation();
  static const int kHostComputationtimeStdDeviationFieldNumber = 5;
  ::google::protobuf::uint32 host_computationtime_std_deviation() const;
  void set_host_computationtime_std_deviation(::google::protobuf::uint32 value);

  // optional uint32 host_framestarttime_std_deviation = 6;
  bool has_host_framestarttime_std_deviation() const;
  void clear_host_framestarttime_std_deviation();
  static const int kHostFramestarttimeStdDeviationFieldNumber = 6;
  ::google::protobuf::uint32 host_framestarttime_std_deviation() const;
  void set_host_framestarttime_std_deviation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_Tick)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_host_computationtime();
  inline void clear_has_host_computationtime();
  inline void set_has_host_computationtime_std_deviation();
  inline void clear_has_host_computationtime_std_deviation();
  inline void set_has_host_framestarttime_std_deviation();
  inline void clear_has_host_framestarttime_std_deviation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tick_;
  ::google::protobuf::uint32 host_computationtime_;
  ::google::protobuf::uint32 host_computationtime_std_deviation_;
  ::google::protobuf::uint32 host_framestarttime_std_deviation_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Tick* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_StringCmd : public ::google::protobuf::Message {
 public:
  CNETMsg_StringCmd();
  virtual ~CNETMsg_StringCmd();

  CNETMsg_StringCmd(const CNETMsg_StringCmd& from);

  inline CNETMsg_StringCmd& operator=(const CNETMsg_StringCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_StringCmd& default_instance();

  void Swap(CNETMsg_StringCmd* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_StringCmd* New() const { return New(NULL); }

  CNETMsg_StringCmd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_StringCmd& from);
  void MergeFrom(const CNETMsg_StringCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_StringCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:CNETMsg_StringCmd)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_StringCmd* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SignonState : public ::google::protobuf::Message {
 public:
  CNETMsg_SignonState();
  virtual ~CNETMsg_SignonState();

  CNETMsg_SignonState(const CNETMsg_SignonState& from);

  inline CNETMsg_SignonState& operator=(const CNETMsg_SignonState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SignonState& default_instance();

  void Swap(CNETMsg_SignonState* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SignonState* New() const { return New(NULL); }

  CNETMsg_SignonState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SignonState& from);
  void MergeFrom(const CNETMsg_SignonState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SignonState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 signon_state = 1;
  bool has_signon_state() const;
  void clear_signon_state();
  static const int kSignonStateFieldNumber = 1;
  ::google::protobuf::uint32 signon_state() const;
  void set_signon_state(::google::protobuf::uint32 value);

  // optional uint32 spawn_count = 2;
  bool has_spawn_count() const;
  void clear_spawn_count();
  static const int kSpawnCountFieldNumber = 2;
  ::google::protobuf::uint32 spawn_count() const;
  void set_spawn_count(::google::protobuf::uint32 value);

  // optional uint32 num_server_players = 3;
  bool has_num_server_players() const;
  void clear_num_server_players();
  static const int kNumServerPlayersFieldNumber = 3;
  ::google::protobuf::uint32 num_server_players() const;
  void set_num_server_players(::google::protobuf::uint32 value);

  // repeated string players_networkids = 4;
  int players_networkids_size() const;
  void clear_players_networkids();
  static const int kPlayersNetworkidsFieldNumber = 4;
  const ::std::string& players_networkids(int index) const;
  ::std::string* mutable_players_networkids(int index);
  void set_players_networkids(int index, const ::std::string& value);
  void set_players_networkids(int index, const char* value);
  void set_players_networkids(int index, const char* value, size_t size);
  ::std::string* add_players_networkids();
  void add_players_networkids(const ::std::string& value);
  void add_players_networkids(const char* value);
  void add_players_networkids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& players_networkids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_players_networkids();

  // optional string map_name = 5;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 5;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // @@protoc_insertion_point(class_scope:CNETMsg_SignonState)
 private:
  inline void set_has_signon_state();
  inline void clear_has_signon_state();
  inline void set_has_spawn_count();
  inline void clear_has_spawn_count();
  inline void set_has_num_server_players();
  inline void clear_has_num_server_players();
  inline void set_has_map_name();
  inline void clear_has_map_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 signon_state_;
  ::google::protobuf::uint32 spawn_count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> players_networkids_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::uint32 num_server_players_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SignonState* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars_CVar : public ::google::protobuf::Message {
 public:
  CMsg_CVars_CVar();
  virtual ~CMsg_CVars_CVar();

  CMsg_CVars_CVar(const CMsg_CVars_CVar& from);

  inline CMsg_CVars_CVar& operator=(const CMsg_CVars_CVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars_CVar& default_instance();

  void Swap(CMsg_CVars_CVar* other);

  // implements Message ----------------------------------------------

  inline CMsg_CVars_CVar* New() const { return New(NULL); }

  CMsg_CVars_CVar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars_CVar& from);
  void MergeFrom(const CMsg_CVars_CVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg_CVars_CVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsg_CVars.CVar)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars_CVar* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars : public ::google::protobuf::Message {
 public:
  CMsg_CVars();
  virtual ~CMsg_CVars();

  CMsg_CVars(const CMsg_CVars& from);

  inline CMsg_CVars& operator=(const CMsg_CVars& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars& default_instance();

  void Swap(CMsg_CVars* other);

  // implements Message ----------------------------------------------

  inline CMsg_CVars* New() const { return New(NULL); }

  CMsg_CVars* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars& from);
  void MergeFrom(const CMsg_CVars& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsg_CVars* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg_CVars_CVar CVar;

  // accessors -------------------------------------------------------

  // repeated .CMsg_CVars.CVar cvars = 1;
  int cvars_size() const;
  void clear_cvars();
  static const int kCvarsFieldNumber = 1;
  const ::CMsg_CVars_CVar& cvars(int index) const;
  ::CMsg_CVars_CVar* mutable_cvars(int index);
  ::CMsg_CVars_CVar* add_cvars();
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
      mutable_cvars();
  const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
      cvars() const;

  // @@protoc_insertion_point(class_scope:CMsg_CVars)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar > cvars_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SetConVar : public ::google::protobuf::Message {
 public:
  CNETMsg_SetConVar();
  virtual ~CNETMsg_SetConVar();

  CNETMsg_SetConVar(const CNETMsg_SetConVar& from);

  inline CNETMsg_SetConVar& operator=(const CNETMsg_SetConVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SetConVar& default_instance();

  void Swap(CNETMsg_SetConVar* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_SetConVar* New() const { return New(NULL); }

  CNETMsg_SetConVar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SetConVar& from);
  void MergeFrom(const CNETMsg_SetConVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_SetConVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsg_CVars convars = 1;
  bool has_convars() const;
  void clear_convars();
  static const int kConvarsFieldNumber = 1;
  const ::CMsg_CVars& convars() const;
  ::CMsg_CVars* mutable_convars();
  ::CMsg_CVars* release_convars();
  void set_allocated_convars(::CMsg_CVars* convars);

  // @@protoc_insertion_point(class_scope:CNETMsg_SetConVar)
 private:
  inline void set_has_convars();
  inline void clear_has_convars();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsg_CVars* convars_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SetConVar* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_NOP : public ::google::protobuf::Message {
 public:
  CNETMsg_NOP();
  virtual ~CNETMsg_NOP();

  CNETMsg_NOP(const CNETMsg_NOP& from);

  inline CNETMsg_NOP& operator=(const CNETMsg_NOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_NOP& default_instance();

  void Swap(CNETMsg_NOP* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_NOP* New() const { return New(NULL); }

  CNETMsg_NOP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_NOP& from);
  void MergeFrom(const CNETMsg_NOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_NOP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CNETMsg_NOP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_NOP* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Disconnect : public ::google::protobuf::Message {
 public:
  CNETMsg_Disconnect();
  virtual ~CNETMsg_Disconnect();

  CNETMsg_Disconnect(const CNETMsg_Disconnect& from);

  inline CNETMsg_Disconnect& operator=(const CNETMsg_Disconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Disconnect& default_instance();

  void Swap(CNETMsg_Disconnect* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_Disconnect* New() const { return New(NULL); }

  CNETMsg_Disconnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Disconnect& from);
  void MergeFrom(const CNETMsg_Disconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_Disconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CNETMsg_Disconnect)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Disconnect* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_File : public ::google::protobuf::Message {
 public:
  CNETMsg_File();
  virtual ~CNETMsg_File();

  CNETMsg_File(const CNETMsg_File& from);

  inline CNETMsg_File& operator=(const CNETMsg_File& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_File& default_instance();

  void Swap(CNETMsg_File* other);

  // implements Message ----------------------------------------------

  inline CNETMsg_File* New() const { return New(NULL); }

  CNETMsg_File* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_File& from);
  void MergeFrom(const CNETMsg_File& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CNETMsg_File* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 transfer_id = 1;
  bool has_transfer_id() const;
  void clear_transfer_id();
  static const int kTransferIdFieldNumber = 1;
  ::google::protobuf::int32 transfer_id() const;
  void set_transfer_id(::google::protobuf::int32 value);

  // optional string file_name = 2;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 2;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional bool is_replay_demo_file = 3;
  bool has_is_replay_demo_file() const;
  void clear_is_replay_demo_file();
  static const int kIsReplayDemoFileFieldNumber = 3;
  bool is_replay_demo_file() const;
  void set_is_replay_demo_file(bool value);

  // optional bool deny = 4;
  bool has_deny() const;
  void clear_deny();
  static const int kDenyFieldNumber = 4;
  bool deny() const;
  void set_deny(bool value);

  // @@protoc_insertion_point(class_scope:CNETMsg_File)
 private:
  inline void set_has_transfer_id();
  inline void clear_has_transfer_id();
  inline void set_has_file_name();
  inline void clear_has_file_name();
  inline void set_has_is_replay_demo_file();
  inline void clear_has_is_replay_demo_file();
  inline void set_has_deny();
  inline void clear_has_deny();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 transfer_id_;
  bool is_replay_demo_file_;
  bool deny_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_File* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ServerInfo : public ::google::protobuf::Message {
 public:
  CSVCMsg_ServerInfo();
  virtual ~CSVCMsg_ServerInfo();

  CSVCMsg_ServerInfo(const CSVCMsg_ServerInfo& from);

  inline CSVCMsg_ServerInfo& operator=(const CSVCMsg_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ServerInfo& default_instance();

  void Swap(CSVCMsg_ServerInfo* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_ServerInfo* New() const { return New(NULL); }

  CSVCMsg_ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ServerInfo& from);
  void MergeFrom(const CSVCMsg_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 protocol = 1;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 1;
  ::google::protobuf::int32 protocol() const;
  void set_protocol(::google::protobuf::int32 value);

  // optional int32 server_count = 2;
  bool has_server_count() const;
  void clear_server_count();
  static const int kServerCountFieldNumber = 2;
  ::google::protobuf::int32 server_count() const;
  void set_server_count(::google::protobuf::int32 value);

  // optional bool is_dedicated = 3;
  bool has_is_dedicated() const;
  void clear_is_dedicated();
  static const int kIsDedicatedFieldNumber = 3;
  bool is_dedicated() const;
  void set_is_dedicated(bool value);

  // optional bool is_official_valve_server = 4;
  bool has_is_official_valve_server() const;
  void clear_is_official_valve_server();
  static const int kIsOfficialValveServerFieldNumber = 4;
  bool is_official_valve_server() const;
  void set_is_official_valve_server(bool value);

  // optional bool is_hltv = 5;
  bool has_is_hltv() const;
  void clear_is_hltv();
  static const int kIsHltvFieldNumber = 5;
  bool is_hltv() const;
  void set_is_hltv(bool value);

  // optional bool is_replay = 6;
  bool has_is_replay() const;
  void clear_is_replay();
  static const int kIsReplayFieldNumber = 6;
  bool is_replay() const;
  void set_is_replay(bool value);

  // optional bool is_redirecting_to_proxy_relay = 21;
  bool has_is_redirecting_to_proxy_relay() const;
  void clear_is_redirecting_to_proxy_relay();
  static const int kIsRedirectingToProxyRelayFieldNumber = 21;
  bool is_redirecting_to_proxy_relay() const;
  void set_is_redirecting_to_proxy_relay(bool value);

  // optional int32 c_os = 7;
  bool has_c_os() const;
  void clear_c_os();
  static const int kCOsFieldNumber = 7;
  ::google::protobuf::int32 c_os() const;
  void set_c_os(::google::protobuf::int32 value);

  // optional fixed32 map_crc = 8;
  bool has_map_crc() const;
  void clear_map_crc();
  static const int kMapCrcFieldNumber = 8;
  ::google::protobuf::uint32 map_crc() const;
  void set_map_crc(::google::protobuf::uint32 value);

  // optional fixed32 client_crc = 9;
  bool has_client_crc() const;
  void clear_client_crc();
  static const int kClientCrcFieldNumber = 9;
  ::google::protobuf::uint32 client_crc() const;
  void set_client_crc(::google::protobuf::uint32 value);

  // optional fixed32 string_table_crc = 10;
  bool has_string_table_crc() const;
  void clear_string_table_crc();
  static const int kStringTableCrcFieldNumber = 10;
  ::google::protobuf::uint32 string_table_crc() const;
  void set_string_table_crc(::google::protobuf::uint32 value);

  // optional int32 max_clients = 11;
  bool has_max_clients() const;
  void clear_max_clients();
  static const int kMaxClientsFieldNumber = 11;
  ::google::protobuf::int32 max_clients() const;
  void set_max_clients(::google::protobuf::int32 value);

  // optional int32 max_classes = 12;
  bool has_max_classes() const;
  void clear_max_classes();
  static const int kMaxClassesFieldNumber = 12;
  ::google::protobuf::int32 max_classes() const;
  void set_max_classes(::google::protobuf::int32 value);

  // optional int32 player_slot = 13;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 13;
  ::google::protobuf::int32 player_slot() const;
  void set_player_slot(::google::protobuf::int32 value);

  // optional float tick_interval = 14;
  bool has_tick_interval() const;
  void clear_tick_interval();
  static const int kTickIntervalFieldNumber = 14;
  float tick_interval() const;
  void set_tick_interval(float value);

  // optional string game_dir = 15;
  bool has_game_dir() const;
  void clear_game_dir();
  static const int kGameDirFieldNumber = 15;
  const ::std::string& game_dir() const;
  void set_game_dir(const ::std::string& value);
  void set_game_dir(const char* value);
  void set_game_dir(const char* value, size_t size);
  ::std::string* mutable_game_dir();
  ::std::string* release_game_dir();
  void set_allocated_game_dir(::std::string* game_dir);

  // optional string map_name = 16;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 16;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // optional string map_group_name = 17;
  bool has_map_group_name() const;
  void clear_map_group_name();
  static const int kMapGroupNameFieldNumber = 17;
  const ::std::string& map_group_name() const;
  void set_map_group_name(const ::std::string& value);
  void set_map_group_name(const char* value);
  void set_map_group_name(const char* value, size_t size);
  ::std::string* mutable_map_group_name();
  ::std::string* release_map_group_name();
  void set_allocated_map_group_name(::std::string* map_group_name);

  // optional string sky_name = 18;
  bool has_sky_name() const;
  void clear_sky_name();
  static const int kSkyNameFieldNumber = 18;
  const ::std::string& sky_name() const;
  void set_sky_name(const ::std::string& value);
  void set_sky_name(const char* value);
  void set_sky_name(const char* value, size_t size);
  ::std::string* mutable_sky_name();
  ::std::string* release_sky_name();
  void set_allocated_sky_name(::std::string* sky_name);

  // optional string host_name = 19;
  bool has_host_name() const;
  void clear_host_name();
  static const int kHostNameFieldNumber = 19;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // optional uint64 ugc_map_id = 22;
  bool has_ugc_map_id() const;
  void clear_ugc_map_id();
  static const int kUgcMapIdFieldNumber = 22;
  ::google::protobuf::uint64 ugc_map_id() const;
  void set_ugc_map_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_ServerInfo)
 private:
  inline void set_has_protocol();
  inline void clear_has_protocol();
  inline void set_has_server_count();
  inline void clear_has_server_count();
  inline void set_has_is_dedicated();
  inline void clear_has_is_dedicated();
  inline void set_has_is_official_valve_server();
  inline void clear_has_is_official_valve_server();
  inline void set_has_is_hltv();
  inline void clear_has_is_hltv();
  inline void set_has_is_replay();
  inline void clear_has_is_replay();
  inline void set_has_is_redirecting_to_proxy_relay();
  inline void clear_has_is_redirecting_to_proxy_relay();
  inline void set_has_c_os();
  inline void clear_has_c_os();
  inline void set_has_map_crc();
  inline void clear_has_map_crc();
  inline void set_has_client_crc();
  inline void clear_has_client_crc();
  inline void set_has_string_table_crc();
  inline void clear_has_string_table_crc();
  inline void set_has_max_clients();
  inline void clear_has_max_clients();
  inline void set_has_max_classes();
  inline void clear_has_max_classes();
  inline void set_has_player_slot();
  inline void clear_has_player_slot();
  inline void set_has_tick_interval();
  inline void clear_has_tick_interval();
  inline void set_has_game_dir();
  inline void clear_has_game_dir();
  inline void set_has_map_name();
  inline void clear_has_map_name();
  inline void set_has_map_group_name();
  inline void clear_has_map_group_name();
  inline void set_has_sky_name();
  inline void clear_has_sky_name();
  inline void set_has_host_name();
  inline void clear_has_host_name();
  inline void set_has_ugc_map_id();
  inline void clear_has_ugc_map_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 protocol_;
  ::google::protobuf::int32 server_count_;
  bool is_dedicated_;
  bool is_official_valve_server_;
  bool is_hltv_;
  bool is_replay_;
  bool is_redirecting_to_proxy_relay_;
  ::google::protobuf::int32 c_os_;
  ::google::protobuf::uint32 map_crc_;
  ::google::protobuf::uint32 client_crc_;
  ::google::protobuf::uint32 string_table_crc_;
  ::google::protobuf::int32 max_clients_;
  ::google::protobuf::int32 max_classes_;
  ::google::protobuf::int32 player_slot_;
  float tick_interval_;
  ::google::protobuf::internal::ArenaStringPtr game_dir_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr map_group_name_;
  ::google::protobuf::internal::ArenaStringPtr sky_name_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::google::protobuf::uint64 ugc_map_id_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo_class_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_ClassInfo_class_t();
  virtual ~CSVCMsg_ClassInfo_class_t();

  CSVCMsg_ClassInfo_class_t(const CSVCMsg_ClassInfo_class_t& from);

  inline CSVCMsg_ClassInfo_class_t& operator=(const CSVCMsg_ClassInfo_class_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ClassInfo_class_t& default_instance();

  void Swap(CSVCMsg_ClassInfo_class_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_ClassInfo_class_t* New() const { return New(NULL); }

  CSVCMsg_ClassInfo_class_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ClassInfo_class_t& from);
  void MergeFrom(const CSVCMsg_ClassInfo_class_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_ClassInfo_class_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 class_id = 1;
  bool has_class_id() const;
  void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::int32 class_id() const;
  void set_class_id(::google::protobuf::int32 value);

  // optional string data_table_name = 2;
  bool has_data_table_name() const;
  void clear_data_table_name();
  static const int kDataTableNameFieldNumber = 2;
  const ::std::string& data_table_name() const;
  void set_data_table_name(const ::std::string& value);
  void set_data_table_name(const char* value);
  void set_data_table_name(const char* value, size_t size);
  ::std::string* mutable_data_table_name();
  ::std::string* release_data_table_name();
  void set_allocated_data_table_name(::std::string* data_table_name);

  // optional string class_name = 3;
  bool has_class_name() const;
  void clear_class_name();
  static const int kClassNameFieldNumber = 3;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_ClassInfo.class_t)
 private:
  inline void set_has_class_id();
  inline void clear_has_class_id();
  inline void set_has_data_table_name();
  inline void clear_has_data_table_name();
  inline void set_has_class_name();
  inline void clear_has_class_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_table_name_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::int32 class_id_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ClassInfo_class_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo : public ::google::protobuf::Message {
 public:
  CSVCMsg_ClassInfo();
  virtual ~CSVCMsg_ClassInfo();

  CSVCMsg_ClassInfo(const CSVCMsg_ClassInfo& from);

  inline CSVCMsg_ClassInfo& operator=(const CSVCMsg_ClassInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ClassInfo& default_instance();

  void Swap(CSVCMsg_ClassInfo* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_ClassInfo* New() const { return New(NULL); }

  CSVCMsg_ClassInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ClassInfo& from);
  void MergeFrom(const CSVCMsg_ClassInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_ClassInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_ClassInfo_class_t class_t;

  // accessors -------------------------------------------------------

  // optional bool create_on_client = 1;
  bool has_create_on_client() const;
  void clear_create_on_client();
  static const int kCreateOnClientFieldNumber = 1;
  bool create_on_client() const;
  void set_create_on_client(bool value);

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  int classes_size() const;
  void clear_classes();
  static const int kClassesFieldNumber = 2;
  const ::CSVCMsg_ClassInfo_class_t& classes(int index) const;
  ::CSVCMsg_ClassInfo_class_t* mutable_classes(int index);
  ::CSVCMsg_ClassInfo_class_t* add_classes();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >*
      mutable_classes();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >&
      classes() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_ClassInfo)
 private:
  inline void set_has_create_on_client();
  inline void clear_has_create_on_client();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t > classes_;
  bool create_on_client_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ClassInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable_sendprop_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_SendTable_sendprop_t();
  virtual ~CSVCMsg_SendTable_sendprop_t();

  CSVCMsg_SendTable_sendprop_t(const CSVCMsg_SendTable_sendprop_t& from);

  inline CSVCMsg_SendTable_sendprop_t& operator=(const CSVCMsg_SendTable_sendprop_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SendTable_sendprop_t& default_instance();

  void Swap(CSVCMsg_SendTable_sendprop_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_SendTable_sendprop_t* New() const { return New(NULL); }

  CSVCMsg_SendTable_sendprop_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SendTable_sendprop_t& from);
  void MergeFrom(const CSVCMsg_SendTable_sendprop_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_SendTable_sendprop_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string var_name = 2;
  bool has_var_name() const;
  void clear_var_name();
  static const int kVarNameFieldNumber = 2;
  const ::std::string& var_name() const;
  void set_var_name(const ::std::string& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  ::std::string* mutable_var_name();
  ::std::string* release_var_name();
  void set_allocated_var_name(::std::string* var_name);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional int32 priority = 4;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // optional string dt_name = 5;
  bool has_dt_name() const;
  void clear_dt_name();
  static const int kDtNameFieldNumber = 5;
  const ::std::string& dt_name() const;
  void set_dt_name(const ::std::string& value);
  void set_dt_name(const char* value);
  void set_dt_name(const char* value, size_t size);
  ::std::string* mutable_dt_name();
  ::std::string* release_dt_name();
  void set_allocated_dt_name(::std::string* dt_name);

  // optional int32 num_elements = 6;
  bool has_num_elements() const;
  void clear_num_elements();
  static const int kNumElementsFieldNumber = 6;
  ::google::protobuf::int32 num_elements() const;
  void set_num_elements(::google::protobuf::int32 value);

  // optional float low_value = 7;
  bool has_low_value() const;
  void clear_low_value();
  static const int kLowValueFieldNumber = 7;
  float low_value() const;
  void set_low_value(float value);

  // optional float high_value = 8;
  bool has_high_value() const;
  void clear_high_value();
  static const int kHighValueFieldNumber = 8;
  float high_value() const;
  void set_high_value(float value);

  // optional int32 num_bits = 9;
  bool has_num_bits() const;
  void clear_num_bits();
  static const int kNumBitsFieldNumber = 9;
  ::google::protobuf::int32 num_bits() const;
  void set_num_bits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SendTable.sendprop_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_var_name();
  inline void clear_has_var_name();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_dt_name();
  inline void clear_has_dt_name();
  inline void set_has_num_elements();
  inline void clear_has_num_elements();
  inline void set_has_low_value();
  inline void clear_has_low_value();
  inline void set_has_high_value();
  inline void clear_has_high_value();
  inline void set_has_num_bits();
  inline void clear_has_num_bits();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr var_name_; // 8
  ::google::protobuf::int32 type_; // 12
  ::google::protobuf::int32 flags_;
  ::google::protobuf::internal::ArenaStringPtr dt_name_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int32 num_elements_;
  float low_value_;
  float high_value_;
  ::google::protobuf::int32 num_bits_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SendTable_sendprop_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_SendTable();
  virtual ~CSVCMsg_SendTable();

  CSVCMsg_SendTable(const CSVCMsg_SendTable& from);

  inline CSVCMsg_SendTable& operator=(const CSVCMsg_SendTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SendTable& default_instance();

  void Swap(CSVCMsg_SendTable* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_SendTable* New() const { return New(NULL); }

  CSVCMsg_SendTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SendTable& from);
  void MergeFrom(const CSVCMsg_SendTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_SendTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_SendTable_sendprop_t sendprop_t;

  // accessors -------------------------------------------------------

  // optional bool is_end = 1;
  bool has_is_end() const;
  void clear_is_end();
  static const int kIsEndFieldNumber = 1;
  bool is_end() const;
  void set_is_end(bool value);

  // optional string net_table_name = 2;
  bool has_net_table_name() const;
  void clear_net_table_name();
  static const int kNetTableNameFieldNumber = 2;
  const ::std::string& net_table_name() const;
  void set_net_table_name(const ::std::string& value);
  void set_net_table_name(const char* value);
  void set_net_table_name(const char* value, size_t size);
  ::std::string* mutable_net_table_name();
  ::std::string* release_net_table_name();
  void set_allocated_net_table_name(::std::string* net_table_name);

  // optional bool needs_decoder = 3;
  bool has_needs_decoder() const;
  void clear_needs_decoder();
  static const int kNeedsDecoderFieldNumber = 3;
  bool needs_decoder() const;
  void set_needs_decoder(bool value);

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  int props_size() const;
  void clear_props();
  static const int kPropsFieldNumber = 4;
  const ::CSVCMsg_SendTable_sendprop_t& props(int index) const;
  ::CSVCMsg_SendTable_sendprop_t* mutable_props(int index);
  ::CSVCMsg_SendTable_sendprop_t* add_props();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >*
      mutable_props();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >&
      props() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_SendTable)
 private:
  inline void set_has_is_end();
  inline void clear_has_is_end();
  inline void set_has_net_table_name();
  inline void clear_has_net_table_name();
  inline void set_has_needs_decoder();
  inline void clear_has_needs_decoder();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr net_table_name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t > props_;
  bool is_end_;
  bool needs_decoder_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SendTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Print : public ::google::protobuf::Message {
 public:
  CSVCMsg_Print();
  virtual ~CSVCMsg_Print();

  CSVCMsg_Print(const CSVCMsg_Print& from);

  inline CSVCMsg_Print& operator=(const CSVCMsg_Print& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Print& default_instance();

  void Swap(CSVCMsg_Print* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_Print* New() const { return New(NULL); }

  CSVCMsg_Print* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Print& from);
  void MergeFrom(const CSVCMsg_Print& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_Print* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Print)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Print* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SetPause : public ::google::protobuf::Message {
 public:
  CSVCMsg_SetPause();
  virtual ~CSVCMsg_SetPause();

  CSVCMsg_SetPause(const CSVCMsg_SetPause& from);

  inline CSVCMsg_SetPause& operator=(const CSVCMsg_SetPause& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SetPause& default_instance();

  void Swap(CSVCMsg_SetPause* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_SetPause* New() const { return New(NULL); }

  CSVCMsg_SetPause* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SetPause& from);
  void MergeFrom(const CSVCMsg_SetPause& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_SetPause* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool paused = 1;
  bool has_paused() const;
  void clear_paused();
  static const int kPausedFieldNumber = 1;
  bool paused() const;
  void set_paused(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SetPause)
 private:
  inline void set_has_paused();
  inline void clear_has_paused();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool paused_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SetPause* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SetView : public ::google::protobuf::Message {
 public:
  CSVCMsg_SetView();
  virtual ~CSVCMsg_SetView();

  CSVCMsg_SetView(const CSVCMsg_SetView& from);

  inline CSVCMsg_SetView& operator=(const CSVCMsg_SetView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SetView& default_instance();

  void Swap(CSVCMsg_SetView* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_SetView* New() const { return New(NULL); }

  CSVCMsg_SetView* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SetView& from);
  void MergeFrom(const CSVCMsg_SetView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_SetView* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity_index = 1;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 1;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SetView)
 private:
  inline void set_has_entity_index();
  inline void clear_has_entity_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 entity_index_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SetView* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_CreateStringTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_CreateStringTable();
  virtual ~CSVCMsg_CreateStringTable();

  CSVCMsg_CreateStringTable(const CSVCMsg_CreateStringTable& from);

  inline CSVCMsg_CreateStringTable& operator=(const CSVCMsg_CreateStringTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_CreateStringTable& default_instance();

  void Swap(CSVCMsg_CreateStringTable* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_CreateStringTable* New() const { return New(NULL); }

  CSVCMsg_CreateStringTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_CreateStringTable& from);
  void MergeFrom(const CSVCMsg_CreateStringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_CreateStringTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 max_entries = 2;
  bool has_max_entries() const;
  void clear_max_entries();
  static const int kMaxEntriesFieldNumber = 2;
  ::google::protobuf::int32 max_entries() const;
  void set_max_entries(::google::protobuf::int32 value);

  // optional int32 num_entries = 3;
  bool has_num_entries() const;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 3;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // optional bool user_data_fixed_size = 4;
  bool has_user_data_fixed_size() const;
  void clear_user_data_fixed_size();
  static const int kUserDataFixedSizeFieldNumber = 4;
  bool user_data_fixed_size() const;
  void set_user_data_fixed_size(bool value);

  // optional int32 user_data_size = 5;
  bool has_user_data_size() const;
  void clear_user_data_size();
  static const int kUserDataSizeFieldNumber = 5;
  ::google::protobuf::int32 user_data_size() const;
  void set_user_data_size(::google::protobuf::int32 value);

  // optional int32 user_data_size_bits = 6;
  bool has_user_data_size_bits() const;
  void clear_user_data_size_bits();
  static const int kUserDataSizeBitsFieldNumber = 6;
  ::google::protobuf::int32 user_data_size_bits() const;
  void set_user_data_size_bits(::google::protobuf::int32 value);

  // optional int32 flags = 7;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 7;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional bytes string_data = 8;
  bool has_string_data() const;
  void clear_string_data();
  static const int kStringDataFieldNumber = 8;
  const ::std::string& string_data() const;
  void set_string_data(const ::std::string& value);
  void set_string_data(const char* value);
  void set_string_data(const void* value, size_t size);
  ::std::string* mutable_string_data();
  ::std::string* release_string_data();
  void set_allocated_string_data(::std::string* string_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_CreateStringTable)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_max_entries();
  inline void clear_has_max_entries();
  inline void set_has_num_entries();
  inline void clear_has_num_entries();
  inline void set_has_user_data_fixed_size();
  inline void clear_has_user_data_fixed_size();
  inline void set_has_user_data_size();
  inline void clear_has_user_data_size();
  inline void set_has_user_data_size_bits();
  inline void clear_has_user_data_size_bits();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_string_data();
  inline void clear_has_string_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 max_entries_;
  ::google::protobuf::int32 num_entries_;
  bool user_data_fixed_size_;
  ::google::protobuf::int32 user_data_size_;
  ::google::protobuf::int32 user_data_size_bits_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::internal::ArenaStringPtr string_data_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_CreateStringTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_UpdateStringTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_UpdateStringTable();
  virtual ~CSVCMsg_UpdateStringTable();

  CSVCMsg_UpdateStringTable(const CSVCMsg_UpdateStringTable& from);

  inline CSVCMsg_UpdateStringTable& operator=(const CSVCMsg_UpdateStringTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_UpdateStringTable& default_instance();

  void Swap(CSVCMsg_UpdateStringTable* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_UpdateStringTable* New() const { return New(NULL); }

  CSVCMsg_UpdateStringTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_UpdateStringTable& from);
  void MergeFrom(const CSVCMsg_UpdateStringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_UpdateStringTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 num_changed_entries = 2;
  bool has_num_changed_entries() const;
  void clear_num_changed_entries();
  static const int kNumChangedEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_changed_entries() const;
  void set_num_changed_entries(::google::protobuf::int32 value);

  // optional bytes string_data = 3;
  bool has_string_data() const;
  void clear_string_data();
  static const int kStringDataFieldNumber = 3;
  const ::std::string& string_data() const;
  void set_string_data(const ::std::string& value);
  void set_string_data(const char* value);
  void set_string_data(const void* value, size_t size);
  ::std::string* mutable_string_data();
  ::std::string* release_string_data();
  void set_allocated_string_data(::std::string* string_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_UpdateStringTable)
 private:
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_num_changed_entries();
  inline void clear_has_num_changed_entries();
  inline void set_has_string_data();
  inline void clear_has_string_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 num_changed_entries_;
  ::google::protobuf::internal::ArenaStringPtr string_data_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_UpdateStringTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceInit : public ::google::protobuf::Message {
 public:
  CSVCMsg_VoiceInit();
  virtual ~CSVCMsg_VoiceInit();

  CSVCMsg_VoiceInit(const CSVCMsg_VoiceInit& from);

  inline CSVCMsg_VoiceInit& operator=(const CSVCMsg_VoiceInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_VoiceInit& default_instance();

  void Swap(CSVCMsg_VoiceInit* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_VoiceInit* New() const { return New(NULL); }

  CSVCMsg_VoiceInit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_VoiceInit& from);
  void MergeFrom(const CSVCMsg_VoiceInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_VoiceInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 quality = 1;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 1;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // optional string codec = 2;
  bool has_codec() const;
  void clear_codec();
  static const int kCodecFieldNumber = 2;
  const ::std::string& codec() const;
  void set_codec(const ::std::string& value);
  void set_codec(const char* value);
  void set_codec(const char* value, size_t size);
  ::std::string* mutable_codec();
  ::std::string* release_codec();
  void set_allocated_codec(::std::string* codec);

  // @@protoc_insertion_point(class_scope:CSVCMsg_VoiceInit)
 private:
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_codec();
  inline void clear_has_codec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr codec_;
  ::google::protobuf::int32 quality_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_VoiceInit* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceData : public ::google::protobuf::Message {
 public:
  CSVCMsg_VoiceData();
  virtual ~CSVCMsg_VoiceData();

  CSVCMsg_VoiceData(const CSVCMsg_VoiceData& from);

  inline CSVCMsg_VoiceData& operator=(const CSVCMsg_VoiceData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_VoiceData& default_instance();

  void Swap(CSVCMsg_VoiceData* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_VoiceData* New() const { return New(NULL); }

  CSVCMsg_VoiceData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_VoiceData& from);
  void MergeFrom(const CSVCMsg_VoiceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_VoiceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client = 1;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 1;
  ::google::protobuf::int32 client() const;
  void set_client(::google::protobuf::int32 value);

  // optional bool proximity = 2;
  bool has_proximity() const;
  void clear_proximity();
  static const int kProximityFieldNumber = 2;
  bool proximity() const;
  void set_proximity(bool value);

  // optional fixed64 xuid = 3;
  bool has_xuid() const;
  void clear_xuid();
  static const int kXuidFieldNumber = 3;
  ::google::protobuf::uint64 xuid() const;
  void set_xuid(::google::protobuf::uint64 value);

  // optional int32 audible_mask = 4;
  bool has_audible_mask() const;
  void clear_audible_mask();
  static const int kAudibleMaskFieldNumber = 4;
  ::google::protobuf::int32 audible_mask() const;
  void set_audible_mask(::google::protobuf::int32 value);

  // optional bytes voice_data = 5;
  bool has_voice_data() const;
  void clear_voice_data();
  static const int kVoiceDataFieldNumber = 5;
  const ::std::string& voice_data() const;
  void set_voice_data(const ::std::string& value);
  void set_voice_data(const char* value);
  void set_voice_data(const void* value, size_t size);
  ::std::string* mutable_voice_data();
  ::std::string* release_voice_data();
  void set_allocated_voice_data(::std::string* voice_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_VoiceData)
 private:
  inline void set_has_client();
  inline void clear_has_client();
  inline void set_has_proximity();
  inline void clear_has_proximity();
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_audible_mask();
  inline void clear_has_audible_mask();
  inline void set_has_voice_data();
  inline void clear_has_voice_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 client_;
  bool proximity_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::internal::ArenaStringPtr voice_data_;
  ::google::protobuf::int32 audible_mask_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_VoiceData* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_FixAngle : public ::google::protobuf::Message {
 public:
  CSVCMsg_FixAngle();
  virtual ~CSVCMsg_FixAngle();

  CSVCMsg_FixAngle(const CSVCMsg_FixAngle& from);

  inline CSVCMsg_FixAngle& operator=(const CSVCMsg_FixAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_FixAngle& default_instance();

  void Swap(CSVCMsg_FixAngle* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_FixAngle* New() const { return New(NULL); }

  CSVCMsg_FixAngle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_FixAngle& from);
  void MergeFrom(const CSVCMsg_FixAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_FixAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool relative = 1;
  bool has_relative() const;
  void clear_relative();
  static const int kRelativeFieldNumber = 1;
  bool relative() const;
  void set_relative(bool value);

  // optional .CMsgQAngle angle = 2;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  const ::CMsgQAngle& angle() const;
  ::CMsgQAngle* mutable_angle();
  ::CMsgQAngle* release_angle();
  void set_allocated_angle(::CMsgQAngle* angle);

  // @@protoc_insertion_point(class_scope:CSVCMsg_FixAngle)
 private:
  inline void set_has_relative();
  inline void clear_has_relative();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgQAngle* angle_;
  bool relative_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_FixAngle* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_CrosshairAngle : public ::google::protobuf::Message {
 public:
  CSVCMsg_CrosshairAngle();
  virtual ~CSVCMsg_CrosshairAngle();

  CSVCMsg_CrosshairAngle(const CSVCMsg_CrosshairAngle& from);

  inline CSVCMsg_CrosshairAngle& operator=(const CSVCMsg_CrosshairAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_CrosshairAngle& default_instance();

  void Swap(CSVCMsg_CrosshairAngle* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_CrosshairAngle* New() const { return New(NULL); }

  CSVCMsg_CrosshairAngle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_CrosshairAngle& from);
  void MergeFrom(const CSVCMsg_CrosshairAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_CrosshairAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgQAngle angle = 1;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  const ::CMsgQAngle& angle() const;
  ::CMsgQAngle* mutable_angle();
  ::CMsgQAngle* release_angle();
  void set_allocated_angle(::CMsgQAngle* angle);

  // @@protoc_insertion_point(class_scope:CSVCMsg_CrosshairAngle)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgQAngle* angle_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_CrosshairAngle* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Prefetch : public ::google::protobuf::Message {
 public:
  CSVCMsg_Prefetch();
  virtual ~CSVCMsg_Prefetch();

  CSVCMsg_Prefetch(const CSVCMsg_Prefetch& from);

  inline CSVCMsg_Prefetch& operator=(const CSVCMsg_Prefetch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Prefetch& default_instance();

  void Swap(CSVCMsg_Prefetch* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_Prefetch* New() const { return New(NULL); }

  CSVCMsg_Prefetch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Prefetch& from);
  void MergeFrom(const CSVCMsg_Prefetch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_Prefetch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sound_index = 1;
  bool has_sound_index() const;
  void clear_sound_index();
  static const int kSoundIndexFieldNumber = 1;
  ::google::protobuf::int32 sound_index() const;
  void set_sound_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Prefetch)
 private:
  inline void set_has_sound_index();
  inline void clear_has_sound_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sound_index_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Prefetch* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_BSPDecal : public ::google::protobuf::Message {
 public:
  CSVCMsg_BSPDecal();
  virtual ~CSVCMsg_BSPDecal();

  CSVCMsg_BSPDecal(const CSVCMsg_BSPDecal& from);

  inline CSVCMsg_BSPDecal& operator=(const CSVCMsg_BSPDecal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_BSPDecal& default_instance();

  void Swap(CSVCMsg_BSPDecal* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_BSPDecal* New() const { return New(NULL); }

  CSVCMsg_BSPDecal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_BSPDecal& from);
  void MergeFrom(const CSVCMsg_BSPDecal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_BSPDecal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::CMsgVector& pos() const;
  ::CMsgVector* mutable_pos();
  ::CMsgVector* release_pos();
  void set_allocated_pos(::CMsgVector* pos);

  // optional int32 decal_texture_index = 2;
  bool has_decal_texture_index() const;
  void clear_decal_texture_index();
  static const int kDecalTextureIndexFieldNumber = 2;
  ::google::protobuf::int32 decal_texture_index() const;
  void set_decal_texture_index(::google::protobuf::int32 value);

  // optional int32 entity_index = 3;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 3;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // optional int32 model_index = 4;
  bool has_model_index() const;
  void clear_model_index();
  static const int kModelIndexFieldNumber = 4;
  ::google::protobuf::int32 model_index() const;
  void set_model_index(::google::protobuf::int32 value);

  // optional bool low_priority = 5;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_BSPDecal)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_decal_texture_index();
  inline void clear_has_decal_texture_index();
  inline void set_has_entity_index();
  inline void clear_has_entity_index();
  inline void set_has_model_index();
  inline void clear_has_model_index();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgVector* pos_;
  ::google::protobuf::int32 decal_texture_index_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 model_index_;
  bool low_priority_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_BSPDecal* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GetCvarValue : public ::google::protobuf::Message {
 public:
  CSVCMsg_GetCvarValue();
  virtual ~CSVCMsg_GetCvarValue();

  CSVCMsg_GetCvarValue(const CSVCMsg_GetCvarValue& from);

  inline CSVCMsg_GetCvarValue& operator=(const CSVCMsg_GetCvarValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GetCvarValue& default_instance();

  void Swap(CSVCMsg_GetCvarValue* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GetCvarValue* New() const { return New(NULL); }

  CSVCMsg_GetCvarValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GetCvarValue& from);
  void MergeFrom(const CSVCMsg_GetCvarValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GetCvarValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cookie = 1;
  bool has_cookie() const;
  void clear_cookie();
  static const int kCookieFieldNumber = 1;
  ::google::protobuf::int32 cookie() const;
  void set_cookie(::google::protobuf::int32 value);

  // optional string cvar_name = 2;
  bool has_cvar_name() const;
  void clear_cvar_name();
  static const int kCvarNameFieldNumber = 2;
  const ::std::string& cvar_name() const;
  void set_cvar_name(const ::std::string& value);
  void set_cvar_name(const char* value);
  void set_cvar_name(const char* value, size_t size);
  ::std::string* mutable_cvar_name();
  ::std::string* release_cvar_name();
  void set_allocated_cvar_name(::std::string* cvar_name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GetCvarValue)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();
  inline void set_has_cvar_name();
  inline void clear_has_cvar_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cvar_name_;
  ::google::protobuf::int32 cookie_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GetCvarValue* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Menu : public ::google::protobuf::Message {
 public:
  CSVCMsg_Menu();
  virtual ~CSVCMsg_Menu();

  CSVCMsg_Menu(const CSVCMsg_Menu& from);

  inline CSVCMsg_Menu& operator=(const CSVCMsg_Menu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Menu& default_instance();

  void Swap(CSVCMsg_Menu* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_Menu* New() const { return New(NULL); }

  CSVCMsg_Menu* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Menu& from);
  void MergeFrom(const CSVCMsg_Menu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_Menu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dialog_type = 1;
  bool has_dialog_type() const;
  void clear_dialog_type();
  static const int kDialogTypeFieldNumber = 1;
  ::google::protobuf::int32 dialog_type() const;
  void set_dialog_type(::google::protobuf::int32 value);

  // optional bytes menu_key_values = 2;
  bool has_menu_key_values() const;
  void clear_menu_key_values();
  static const int kMenuKeyValuesFieldNumber = 2;
  const ::std::string& menu_key_values() const;
  void set_menu_key_values(const ::std::string& value);
  void set_menu_key_values(const char* value);
  void set_menu_key_values(const void* value, size_t size);
  ::std::string* mutable_menu_key_values();
  ::std::string* release_menu_key_values();
  void set_allocated_menu_key_values(::std::string* menu_key_values);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Menu)
 private:
  inline void set_has_dialog_type();
  inline void clear_has_dialog_type();
  inline void set_has_menu_key_values();
  inline void clear_has_menu_key_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr menu_key_values_;
  ::google::protobuf::int32 dialog_type_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Menu* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_UserMessage : public ::google::protobuf::Message {
 public:
  CSVCMsg_UserMessage();
  virtual ~CSVCMsg_UserMessage();

  CSVCMsg_UserMessage(const CSVCMsg_UserMessage& from);

  inline CSVCMsg_UserMessage& operator=(const CSVCMsg_UserMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_UserMessage& default_instance();

  void Swap(CSVCMsg_UserMessage* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_UserMessage* New() const { return New(NULL); }

  CSVCMsg_UserMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_UserMessage& from);
  void MergeFrom(const CSVCMsg_UserMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_UserMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional bytes msg_data = 2;
  bool has_msg_data() const;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  void set_msg_data(const char* value);
  void set_msg_data(const void* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_UserMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  ::google::protobuf::int32 msg_type_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_UserMessage* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent_key_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent_key_t();
  virtual ~CSVCMsg_GameEvent_key_t();

  CSVCMsg_GameEvent_key_t(const CSVCMsg_GameEvent_key_t& from);

  inline CSVCMsg_GameEvent_key_t& operator=(const CSVCMsg_GameEvent_key_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent_key_t& default_instance();

  void Swap(CSVCMsg_GameEvent_key_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEvent_key_t* New() const { return New(NULL); }

  CSVCMsg_GameEvent_key_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent_key_t& from);
  void MergeFrom(const CSVCMsg_GameEvent_key_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEvent_key_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string val_string = 2;
  bool has_val_string() const;
  void clear_val_string();
  static const int kValStringFieldNumber = 2;
  const ::std::string& val_string() const;
  void set_val_string(const ::std::string& value);
  void set_val_string(const char* value);
  void set_val_string(const char* value, size_t size);
  ::std::string* mutable_val_string();
  ::std::string* release_val_string();
  void set_allocated_val_string(::std::string* val_string);

  // optional float val_float = 3;
  bool has_val_float() const;
  void clear_val_float();
  static const int kValFloatFieldNumber = 3;
  float val_float() const;
  void set_val_float(float value);

  // optional int32 val_long = 4;
  bool has_val_long() const;
  void clear_val_long();
  static const int kValLongFieldNumber = 4;
  ::google::protobuf::int32 val_long() const;
  void set_val_long(::google::protobuf::int32 value);

  // optional int32 val_short = 5;
  bool has_val_short() const;
  void clear_val_short();
  static const int kValShortFieldNumber = 5;
  ::google::protobuf::int32 val_short() const;
  void set_val_short(::google::protobuf::int32 value);

  // optional int32 val_byte = 6;
  bool has_val_byte() const;
  void clear_val_byte();
  static const int kValByteFieldNumber = 6;
  ::google::protobuf::int32 val_byte() const;
  void set_val_byte(::google::protobuf::int32 value);

  // optional bool val_bool = 7;
  bool has_val_bool() const;
  void clear_val_bool();
  static const int kValBoolFieldNumber = 7;
  bool val_bool() const;
  void set_val_bool(bool value);

  // optional uint64 val_uint64 = 8;
  bool has_val_uint64() const;
  void clear_val_uint64();
  static const int kValUint64FieldNumber = 8;
  ::google::protobuf::uint64 val_uint64() const;
  void set_val_uint64(::google::protobuf::uint64 value);

  // optional bytes val_wstring = 9;
  bool has_val_wstring() const;
  void clear_val_wstring();
  static const int kValWstringFieldNumber = 9;
  const ::std::string& val_wstring() const;
  void set_val_wstring(const ::std::string& value);
  void set_val_wstring(const char* value);
  void set_val_wstring(const void* value, size_t size);
  ::std::string* mutable_val_wstring();
  ::std::string* release_val_wstring();
  void set_allocated_val_wstring(::std::string* val_wstring);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent.key_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_val_string();
  inline void clear_has_val_string();
  inline void set_has_val_float();
  inline void clear_has_val_float();
  inline void set_has_val_long();
  inline void clear_has_val_long();
  inline void set_has_val_short();
  inline void clear_has_val_short();
  inline void set_has_val_byte();
  inline void clear_has_val_byte();
  inline void set_has_val_bool();
  inline void clear_has_val_bool();
  inline void set_has_val_uint64();
  inline void clear_has_val_uint64();
  inline void set_has_val_wstring();
  inline void clear_has_val_wstring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr val_string_;
  ::google::protobuf::int32 type_;
  float val_float_;
  ::google::protobuf::int32 val_long_;
  ::google::protobuf::int32 val_short_;
  ::google::protobuf::int32 val_byte_;
  bool val_bool_;
  ::google::protobuf::uint64 val_uint64_;
  ::google::protobuf::internal::ArenaStringPtr val_wstring_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent_key_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent();
  virtual ~CSVCMsg_GameEvent();

  CSVCMsg_GameEvent(const CSVCMsg_GameEvent& from);

  inline CSVCMsg_GameEvent& operator=(const CSVCMsg_GameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent& default_instance();

  void Swap(CSVCMsg_GameEvent* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEvent* New() const { return New(NULL); }

  CSVCMsg_GameEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent& from);
  void MergeFrom(const CSVCMsg_GameEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEvent_key_t key_t;

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional int32 eventid = 2;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 2;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  const ::CSVCMsg_GameEvent_key_t& keys(int index) const;
  ::CSVCMsg_GameEvent_key_t* mutable_keys(int index);
  ::CSVCMsg_GameEvent_key_t* add_keys();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
      mutable_keys();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
      keys() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent)
 private:
  inline void set_has_event_name();
  inline void clear_has_event_name();
  inline void set_has_eventid();
  inline void clear_has_eventid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t > keys_;
  ::google::protobuf::int32 eventid_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_key_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList_key_t();
  virtual ~CSVCMsg_GameEventList_key_t();

  CSVCMsg_GameEventList_key_t(const CSVCMsg_GameEventList_key_t& from);

  inline CSVCMsg_GameEventList_key_t& operator=(const CSVCMsg_GameEventList_key_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList_key_t& default_instance();

  void Swap(CSVCMsg_GameEventList_key_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList_key_t* New() const { return New(NULL); }

  CSVCMsg_GameEventList_key_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList_key_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_key_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEventList_key_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList.key_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList_key_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_descriptor_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList_descriptor_t();
  virtual ~CSVCMsg_GameEventList_descriptor_t();

  CSVCMsg_GameEventList_descriptor_t(const CSVCMsg_GameEventList_descriptor_t& from);

  inline CSVCMsg_GameEventList_descriptor_t& operator=(const CSVCMsg_GameEventList_descriptor_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList_descriptor_t& default_instance();

  void Swap(CSVCMsg_GameEventList_descriptor_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList_descriptor_t* New() const { return New(NULL); }

  CSVCMsg_GameEventList_descriptor_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEventList_descriptor_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventid = 1;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 1;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  const ::CSVCMsg_GameEventList_key_t& keys(int index) const;
  ::CSVCMsg_GameEventList_key_t* mutable_keys(int index);
  ::CSVCMsg_GameEventList_key_t* add_keys();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >*
      mutable_keys();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >&
      keys() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList.descriptor_t)
 private:
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t > keys_;
  ::google::protobuf::int32 eventid_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList_descriptor_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList();
  virtual ~CSVCMsg_GameEventList();

  CSVCMsg_GameEventList(const CSVCMsg_GameEventList& from);

  inline CSVCMsg_GameEventList& operator=(const CSVCMsg_GameEventList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList& default_instance();

  void Swap(CSVCMsg_GameEventList* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList* New() const { return New(NULL); }

  CSVCMsg_GameEventList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList& from);
  void MergeFrom(const CSVCMsg_GameEventList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_GameEventList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEventList_key_t key_t;
  typedef CSVCMsg_GameEventList_descriptor_t descriptor_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  int descriptors_size() const;
  void clear_descriptors();
  static const int kDescriptorsFieldNumber = 1;
  const ::CSVCMsg_GameEventList_descriptor_t& descriptors(int index) const;
  ::CSVCMsg_GameEventList_descriptor_t* mutable_descriptors(int index);
  ::CSVCMsg_GameEventList_descriptor_t* add_descriptors();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >*
      mutable_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >&
      descriptors() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t > descriptors_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_TempEntities : public ::google::protobuf::Message {
 public:
  CSVCMsg_TempEntities();
  virtual ~CSVCMsg_TempEntities();

  CSVCMsg_TempEntities(const CSVCMsg_TempEntities& from);

  inline CSVCMsg_TempEntities& operator=(const CSVCMsg_TempEntities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_TempEntities& default_instance();

  void Swap(CSVCMsg_TempEntities* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_TempEntities* New() const { return New(NULL); }

  CSVCMsg_TempEntities* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_TempEntities& from);
  void MergeFrom(const CSVCMsg_TempEntities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_TempEntities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reliable = 1;
  bool has_reliable() const;
  void clear_reliable();
  static const int kReliableFieldNumber = 1;
  bool reliable() const;
  void set_reliable(bool value);

  // optional int32 num_entries = 2;
  bool has_num_entries() const;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // optional bytes entity_data = 3;
  bool has_entity_data() const;
  void clear_entity_data();
  static const int kEntityDataFieldNumber = 3;
  const ::std::string& entity_data() const;
  void set_entity_data(const ::std::string& value);
  void set_entity_data(const char* value);
  void set_entity_data(const void* value, size_t size);
  ::std::string* mutable_entity_data();
  ::std::string* release_entity_data();
  void set_allocated_entity_data(::std::string* entity_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_TempEntities)
 private:
  inline void set_has_reliable();
  inline void clear_has_reliable();
  inline void set_has_num_entries();
  inline void clear_has_num_entries();
  inline void set_has_entity_data();
  inline void clear_has_entity_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool reliable_;
  ::google::protobuf::int32 num_entries_;
  ::google::protobuf::internal::ArenaStringPtr entity_data_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_TempEntities* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_PacketEntities : public ::google::protobuf::Message {
 public:
  CSVCMsg_PacketEntities();
  virtual ~CSVCMsg_PacketEntities();

  CSVCMsg_PacketEntities(const CSVCMsg_PacketEntities& from);

  inline CSVCMsg_PacketEntities& operator=(const CSVCMsg_PacketEntities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_PacketEntities& default_instance();

  void Swap(CSVCMsg_PacketEntities* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_PacketEntities* New() const { return New(NULL); }

  CSVCMsg_PacketEntities* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_PacketEntities& from);
  void MergeFrom(const CSVCMsg_PacketEntities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_PacketEntities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_entries = 1;
  bool has_max_entries() const;
  void clear_max_entries();
  static const int kMaxEntriesFieldNumber = 1;
  ::google::protobuf::int32 max_entries() const;
  void set_max_entries(::google::protobuf::int32 value);

  // optional int32 updated_entries = 2;
  bool has_updated_entries() const;
  void clear_updated_entries();
  static const int kUpdatedEntriesFieldNumber = 2;
  ::google::protobuf::int32 updated_entries() const;
  void set_updated_entries(::google::protobuf::int32 value);

  // optional bool is_delta = 3;
  bool has_is_delta() const;
  void clear_is_delta();
  static const int kIsDeltaFieldNumber = 3;
  bool is_delta() const;
  void set_is_delta(bool value);

  // optional bool update_baseline = 4;
  bool has_update_baseline() const;
  void clear_update_baseline();
  static const int kUpdateBaselineFieldNumber = 4;
  bool update_baseline() const;
  void set_update_baseline(bool value);

  // optional int32 baseline = 5;
  bool has_baseline() const;
  void clear_baseline();
  static const int kBaselineFieldNumber = 5;
  ::google::protobuf::int32 baseline() const;
  void set_baseline(::google::protobuf::int32 value);

  // optional int32 delta_from = 6;
  bool has_delta_from() const;
  void clear_delta_from();
  static const int kDeltaFromFieldNumber = 6;
  ::google::protobuf::int32 delta_from() const;
  void set_delta_from(::google::protobuf::int32 value);

  // optional bytes entity_data = 7;
  bool has_entity_data() const;
  void clear_entity_data();
  static const int kEntityDataFieldNumber = 7;
  const ::std::string& entity_data() const;
  void set_entity_data(const ::std::string& value);
  void set_entity_data(const char* value);
  void set_entity_data(const void* value, size_t size);
  ::std::string* mutable_entity_data();
  ::std::string* release_entity_data();
  void set_allocated_entity_data(::std::string* entity_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_PacketEntities)
 private:
  inline void set_has_max_entries();
  inline void clear_has_max_entries();
  inline void set_has_updated_entries();
  inline void clear_has_updated_entries();
  inline void set_has_is_delta();
  inline void clear_has_is_delta();
  inline void set_has_update_baseline();
  inline void clear_has_update_baseline();
  inline void set_has_baseline();
  inline void clear_has_baseline();
  inline void set_has_delta_from();
  inline void clear_has_delta_from();
  inline void set_has_entity_data();
  inline void clear_has_entity_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];

  mutable int _cached_size_; // 0x4
  ::google::protobuf::int32 max_entries_; //0x8
  ::google::protobuf::int32 updated_entries_; //0xC
  bool is_delta_; // 0x10
  bool update_baseline_; // 0x11
  ::google::protobuf::int32 baseline_; // 0x14
  ::google::protobuf::internal::ArenaStringPtr entity_data_; // 0x18
  ::google::protobuf::int32 delta_from_; // 0x1C

  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_PacketEntities* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds_sounddata_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_Sounds_sounddata_t();
  virtual ~CSVCMsg_Sounds_sounddata_t();

  CSVCMsg_Sounds_sounddata_t(const CSVCMsg_Sounds_sounddata_t& from);

  inline CSVCMsg_Sounds_sounddata_t& operator=(const CSVCMsg_Sounds_sounddata_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Sounds_sounddata_t& default_instance();

  void Swap(CSVCMsg_Sounds_sounddata_t* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_Sounds_sounddata_t* New() const { return New(NULL); }

  CSVCMsg_Sounds_sounddata_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Sounds_sounddata_t& from);
  void MergeFrom(const CSVCMsg_Sounds_sounddata_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_Sounds_sounddata_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 origin_x = 1;
  bool has_origin_x() const;
  void clear_origin_x();
  static const int kOriginXFieldNumber = 1;
  ::google::protobuf::int32 origin_x() const;
  void set_origin_x(::google::protobuf::int32 value);

  // optional sint32 origin_y = 2;
  bool has_origin_y() const;
  void clear_origin_y();
  static const int kOriginYFieldNumber = 2;
  ::google::protobuf::int32 origin_y() const;
  void set_origin_y(::google::protobuf::int32 value);

  // optional sint32 origin_z = 3;
  bool has_origin_z() const;
  void clear_origin_z();
  static const int kOriginZFieldNumber = 3;
  ::google::protobuf::int32 origin_z() const;
  void set_origin_z(::google::protobuf::int32 value);

  // optional uint32 volume = 4;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 4;
  ::google::protobuf::uint32 volume() const;
  void set_volume(::google::protobuf::uint32 value);

  // optional float delay_value = 5;
  bool has_delay_value() const;
  void clear_delay_value();
  static const int kDelayValueFieldNumber = 5;
  float delay_value() const;
  void set_delay_value(float value);

  // optional int32 sequence_number = 6;
  bool has_sequence_number() const;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 6;
  ::google::protobuf::int32 sequence_number() const;
  void set_sequence_number(::google::protobuf::int32 value);

  // optional int32 entity_index = 7;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 7;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // optional int32 channel = 8;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 8;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 pitch = 9;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 9;
  ::google::protobuf::int32 pitch() const;
  void set_pitch(::google::protobuf::int32 value);

  // optional int32 flags = 10;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 10;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional uint32 sound_num = 11;
  bool has_sound_num() const;
  void clear_sound_num();
  static const int kSoundNumFieldNumber = 11;
  ::google::protobuf::uint32 sound_num() const;
  void set_sound_num(::google::protobuf::uint32 value);

  // optional fixed32 sound_num_handle = 12;
  bool has_sound_num_handle() const;
  void clear_sound_num_handle();
  static const int kSoundNumHandleFieldNumber = 12;
  ::google::protobuf::uint32 sound_num_handle() const;
  void set_sound_num_handle(::google::protobuf::uint32 value);

  // optional int32 speaker_entity = 13;
  bool has_speaker_entity() const;
  void clear_speaker_entity();
  static const int kSpeakerEntityFieldNumber = 13;
  ::google::protobuf::int32 speaker_entity() const;
  void set_speaker_entity(::google::protobuf::int32 value);

  // optional int32 random_seed = 14;
  bool has_random_seed() const;
  void clear_random_seed();
  static const int kRandomSeedFieldNumber = 14;
  ::google::protobuf::int32 random_seed() const;
  void set_random_seed(::google::protobuf::int32 value);

  // optional int32 sound_level = 15;
  bool has_sound_level() const;
  void clear_sound_level();
  static const int kSoundLevelFieldNumber = 15;
  ::google::protobuf::int32 sound_level() const;
  void set_sound_level(::google::protobuf::int32 value);

  // optional bool is_sentence = 16;
  bool has_is_sentence() const;
  void clear_is_sentence();
  static const int kIsSentenceFieldNumber = 16;
  bool is_sentence() const;
  void set_is_sentence(bool value);

  // optional bool is_ambient = 17;
  bool has_is_ambient() const;
  void clear_is_ambient();
  static const int kIsAmbientFieldNumber = 17;
  bool is_ambient() const;
  void set_is_ambient(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Sounds.sounddata_t)
 private:
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_origin_z();
  inline void clear_has_origin_z();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_delay_value();
  inline void clear_has_delay_value();
  inline void set_has_sequence_number();
  inline void clear_has_sequence_number();
  inline void set_has_entity_index();
  inline void clear_has_entity_index();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_pitch();
  inline void clear_has_pitch();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_sound_num();
  inline void clear_has_sound_num();
  inline void set_has_sound_num_handle();
  inline void clear_has_sound_num_handle();
  inline void set_has_speaker_entity();
  inline void clear_has_speaker_entity();
  inline void set_has_random_seed();
  inline void clear_has_random_seed();
  inline void set_has_sound_level();
  inline void clear_has_sound_level();
  inline void set_has_is_sentence();
  inline void clear_has_is_sentence();
  inline void set_has_is_ambient();
  inline void clear_has_is_ambient();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::uint32 volume_;
  float delay_value_;
  ::google::protobuf::int32 sequence_number_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::uint32 sound_num_;
  ::google::protobuf::uint32 sound_num_handle_;
  ::google::protobuf::int32 speaker_entity_;
  ::google::protobuf::int32 random_seed_;
  ::google::protobuf::int32 sound_level_;
  bool is_sentence_;
  bool is_ambient_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Sounds_sounddata_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds : public ::google::protobuf::Message {
 public:
  CSVCMsg_Sounds();
  virtual ~CSVCMsg_Sounds();

  CSVCMsg_Sounds(const CSVCMsg_Sounds& from);

  inline CSVCMsg_Sounds& operator=(const CSVCMsg_Sounds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Sounds& default_instance();

  void Swap(CSVCMsg_Sounds* other);

  // implements Message ----------------------------------------------

  inline CSVCMsg_Sounds* New() const { return New(NULL); }

  CSVCMsg_Sounds* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Sounds& from);
  void MergeFrom(const CSVCMsg_Sounds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSVCMsg_Sounds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_Sounds_sounddata_t sounddata_t;

  // accessors -------------------------------------------------------

  // optional bool reliable_sound = 1;
  bool has_reliable_sound() const;
  void clear_reliable_sound();
  static const int kReliableSoundFieldNumber = 1;
  bool reliable_sound() const;
  void set_reliable_sound(bool value);

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  int sounds_size() const;
  void clear_sounds();
  static const int kSoundsFieldNumber = 2;
  const ::CSVCMsg_Sounds_sounddata_t& sounds(int index) const;
  ::CSVCMsg_Sounds_sounddata_t* mutable_sounds(int index);
  ::CSVCMsg_Sounds_sounddata_t* add_sounds();
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >*
      mutable_sounds();
  const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >&
      sounds() const;

  // @@protoc_insertion_point(class_scope:CSVCMsg_Sounds)
 private:
  inline void set_has_reliable_sound();
  inline void clear_has_reliable_sound();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t > sounds_;
  bool reliable_sound_;
  friend void  protobuf_AddDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_AssignDesc_netmessages_5fpublic_2eproto();
  friend void protobuf_ShutdownFile_netmessages_5fpublic_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Sounds* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgVector

// optional float x = 1;
inline bool CMsgVector::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector::x() const {
  // @@protoc_insertion_point(field_get:CMsgVector.x)
  return x_;
}
inline void CMsgVector::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.x)
}

// optional float y = 2;
inline bool CMsgVector::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector::y() const {
  // @@protoc_insertion_point(field_get:CMsgVector.y)
  return y_;
}
inline void CMsgVector::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.y)
}

// optional float z = 3;
inline bool CMsgVector::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVector::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgVector::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgVector::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgVector::z() const {
  // @@protoc_insertion_point(field_get:CMsgVector.z)
  return z_;
}
inline void CMsgVector::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector.z)
}

// -------------------------------------------------------------------

// CMsgVector2D

// optional float x = 1;
inline bool CMsgVector2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector2D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector2D::x() const {
  // @@protoc_insertion_point(field_get:CMsgVector2D.x)
  return x_;
}
inline void CMsgVector2D::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector2D.x)
}

// optional float y = 2;
inline bool CMsgVector2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector2D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector2D::y() const {
  // @@protoc_insertion_point(field_get:CMsgVector2D.y)
  return y_;
}
inline void CMsgVector2D::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgVector2D.y)
}

// -------------------------------------------------------------------

// CMsgQAngle

// optional float x = 1;
inline bool CMsgQAngle::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQAngle::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQAngle::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQAngle::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgQAngle::x() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.x)
  return x_;
}
inline void CMsgQAngle::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.x)
}

// optional float y = 2;
inline bool CMsgQAngle::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQAngle::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQAngle::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQAngle::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgQAngle::y() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.y)
  return y_;
}
inline void CMsgQAngle::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.y)
}

// optional float z = 3;
inline bool CMsgQAngle::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQAngle::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQAngle::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQAngle::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgQAngle::z() const {
  // @@protoc_insertion_point(field_get:CMsgQAngle.z)
  return z_;
}
inline void CMsgQAngle::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CMsgQAngle.z)
}

// -------------------------------------------------------------------

// CMsgRGBA

// optional int32 r = 1;
inline bool CMsgRGBA::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRGBA::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRGBA::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRGBA::clear_r() {
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 CMsgRGBA::r() const {
  // @@protoc_insertion_point(field_get:CMsgRGBA.r)
  return r_;
}
inline void CMsgRGBA::set_r(::google::protobuf::int32 value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:CMsgRGBA.r)
}

// optional int32 g = 2;
inline bool CMsgRGBA::has_g() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRGBA::set_has_g() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRGBA::clear_has_g() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRGBA::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline ::google::protobuf::int32 CMsgRGBA::g() const {
  // @@protoc_insertion_point(field_get:CMsgRGBA.g)
  return g_;
}
inline void CMsgRGBA::set_g(::google::protobuf::int32 value) {
  set_has_g();
  g_ = value;
  // @@protoc_insertion_point(field_set:CMsgRGBA.g)
}

// optional int32 b = 3;
inline bool CMsgRGBA::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgRGBA::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgRGBA::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgRGBA::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 CMsgRGBA::b() const {
  // @@protoc_insertion_point(field_get:CMsgRGBA.b)
  return b_;
}
inline void CMsgRGBA::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:CMsgRGBA.b)
}

// optional int32 a = 4;
inline bool CMsgRGBA::has_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgRGBA::set_has_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgRGBA::clear_has_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgRGBA::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 CMsgRGBA::a() const {
  // @@protoc_insertion_point(field_get:CMsgRGBA.a)
  return a_;
}
inline void CMsgRGBA::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:CMsgRGBA.a)
}

// -------------------------------------------------------------------

// CNETMsg_Tick

// optional uint32 tick = 1;
inline bool CNETMsg_Tick::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Tick::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Tick::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Tick::clear_tick() {
  tick_ = 0u;
  clear_has_tick();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::tick() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.tick)
  return tick_;
}
inline void CNETMsg_Tick::set_tick(::google::protobuf::uint32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.tick)
}

// optional uint32 host_computationtime = 4;
inline bool CNETMsg_Tick::has_host_computationtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_Tick::clear_host_computationtime() {
  host_computationtime_ = 0u;
  clear_has_host_computationtime();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_computationtime)
  return host_computationtime_;
}
inline void CNETMsg_Tick::set_host_computationtime(::google::protobuf::uint32 value) {
  set_has_host_computationtime();
  host_computationtime_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_computationtime)
}

// optional uint32 host_computationtime_std_deviation = 5;
inline bool CNETMsg_Tick::has_host_computationtime_std_deviation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime_std_deviation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime_std_deviation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_Tick::clear_host_computationtime_std_deviation() {
  host_computationtime_std_deviation_ = 0u;
  clear_has_host_computationtime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime_std_deviation() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_computationtime_std_deviation)
  return host_computationtime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_computationtime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_computationtime_std_deviation();
  host_computationtime_std_deviation_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_computationtime_std_deviation)
}

// optional uint32 host_framestarttime_std_deviation = 6;
inline bool CNETMsg_Tick::has_host_framestarttime_std_deviation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_Tick::set_has_host_framestarttime_std_deviation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_Tick::clear_has_host_framestarttime_std_deviation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_Tick::clear_host_framestarttime_std_deviation() {
  host_framestarttime_std_deviation_ = 0u;
  clear_has_host_framestarttime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_framestarttime_std_deviation() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Tick.host_framestarttime_std_deviation)
  return host_framestarttime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_framestarttime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_framestarttime_std_deviation();
  host_framestarttime_std_deviation_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_Tick.host_framestarttime_std_deviation)
}

// -------------------------------------------------------------------

// CNETMsg_StringCmd

// optional string command = 1;
inline bool CNETMsg_StringCmd::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_StringCmd::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_StringCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_StringCmd::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& CNETMsg_StringCmd::command() const {
  // @@protoc_insertion_point(field_get:CNETMsg_StringCmd.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_StringCmd::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_StringCmd.command)
}
inline void CNETMsg_StringCmd::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_StringCmd.command)
}
inline void CNETMsg_StringCmd::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_StringCmd.command)
}
inline ::std::string* CNETMsg_StringCmd::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:CNETMsg_StringCmd.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_StringCmd::release_command() {
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_StringCmd::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_StringCmd.command)
}

// -------------------------------------------------------------------

// CNETMsg_SignonState

// optional uint32 signon_state = 1;
inline bool CNETMsg_SignonState::has_signon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SignonState::set_has_signon_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SignonState::clear_has_signon_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SignonState::clear_signon_state() {
  signon_state_ = 0u;
  clear_has_signon_state();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::signon_state() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.signon_state)
  return signon_state_;
}
inline void CNETMsg_SignonState::set_signon_state(::google::protobuf::uint32 value) {
  set_has_signon_state();
  signon_state_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.signon_state)
}

// optional uint32 spawn_count = 2;
inline bool CNETMsg_SignonState::has_spawn_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SignonState::set_has_spawn_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SignonState::clear_has_spawn_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SignonState::clear_spawn_count() {
  spawn_count_ = 0u;
  clear_has_spawn_count();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::spawn_count() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.spawn_count)
  return spawn_count_;
}
inline void CNETMsg_SignonState::set_spawn_count(::google::protobuf::uint32 value) {
  set_has_spawn_count();
  spawn_count_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.spawn_count)
}

// optional uint32 num_server_players = 3;
inline bool CNETMsg_SignonState::has_num_server_players() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SignonState::set_has_num_server_players() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SignonState::clear_has_num_server_players() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SignonState::clear_num_server_players() {
  num_server_players_ = 0u;
  clear_has_num_server_players();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::num_server_players() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.num_server_players)
  return num_server_players_;
}
inline void CNETMsg_SignonState::set_num_server_players(::google::protobuf::uint32 value) {
  set_has_num_server_players();
  num_server_players_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.num_server_players)
}

// repeated string players_networkids = 4;
inline int CNETMsg_SignonState::players_networkids_size() const {
  return players_networkids_.size();
}
inline void CNETMsg_SignonState::clear_players_networkids() {
  players_networkids_.Clear();
}
inline const ::std::string& CNETMsg_SignonState::players_networkids(int index) const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.players_networkids)
  return players_networkids_.Get(index);
}
inline ::std::string* CNETMsg_SignonState::mutable_players_networkids(int index) {
  // @@protoc_insertion_point(field_mutable:CNETMsg_SignonState.players_networkids)
  return players_networkids_.Mutable(index);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.players_networkids)
  players_networkids_.Mutable(index)->assign(value);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value) {
  players_networkids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value, size_t size) {
  players_networkids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SignonState.players_networkids)
}
inline ::std::string* CNETMsg_SignonState::add_players_networkids() {
  return players_networkids_.Add();
}
inline void CNETMsg_SignonState::add_players_networkids(const ::std::string& value) {
  players_networkids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value) {
  players_networkids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CNETMsg_SignonState.players_networkids)
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value, size_t size) {
  players_networkids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CNETMsg_SignonState.players_networkids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CNETMsg_SignonState::players_networkids() const {
  // @@protoc_insertion_point(field_list:CNETMsg_SignonState.players_networkids)
  return players_networkids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CNETMsg_SignonState::mutable_players_networkids() {
  // @@protoc_insertion_point(field_mutable_list:CNETMsg_SignonState.players_networkids)
  return &players_networkids_;
}

// optional string map_name = 5;
inline bool CNETMsg_SignonState::has_map_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_SignonState::set_has_map_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_SignonState::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_SignonState::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
inline const ::std::string& CNETMsg_SignonState::map_name() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SignonState.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SignonState::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_SignonState.map_name)
}
inline void CNETMsg_SignonState::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_SignonState.map_name)
}
inline void CNETMsg_SignonState::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_SignonState.map_name)
}
inline ::std::string* CNETMsg_SignonState::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:CNETMsg_SignonState.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_SignonState::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_SignonState::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SignonState.map_name)
}

// -------------------------------------------------------------------

// CMsg_CVars_CVar

// optional string name = 1;
inline bool CMsg_CVars_CVar::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg_CVars_CVar::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg_CVars_CVar::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg_CVars_CVar::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsg_CVars_CVar::name() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.name)
}
inline void CMsg_CVars_CVar::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.name)
}
inline void CMsg_CVars_CVar::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.name)
}
inline ::std::string* CMsg_CVars_CVar::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.name)
}

// optional string value = 2;
inline bool CMsg_CVars_CVar::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg_CVars_CVar::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg_CVars_CVar::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg_CVars_CVar::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsg_CVars_CVar::value() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.value)
}
inline void CMsg_CVars_CVar::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.value)
}
inline void CMsg_CVars_CVar::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.value)
}
inline ::std::string* CMsg_CVars_CVar::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.value)
}

// -------------------------------------------------------------------

// CMsg_CVars

// repeated .CMsg_CVars.CVar cvars = 1;
inline int CMsg_CVars::cvars_size() const {
  return cvars_.size();
}
inline void CMsg_CVars::clear_cvars() {
  cvars_.Clear();
}
inline const ::CMsg_CVars_CVar& CMsg_CVars::cvars(int index) const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.cvars)
  return cvars_.Get(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::mutable_cvars(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.cvars)
  return cvars_.Mutable(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::add_cvars() {
  // @@protoc_insertion_point(field_add:CMsg_CVars.cvars)
  return cvars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
CMsg_CVars::mutable_cvars() {
  // @@protoc_insertion_point(field_mutable_list:CMsg_CVars.cvars)
  return &cvars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
CMsg_CVars::cvars() const {
  // @@protoc_insertion_point(field_list:CMsg_CVars.cvars)
  return cvars_;
}

// -------------------------------------------------------------------

// CNETMsg_SetConVar

// optional .CMsg_CVars convars = 1;
inline bool CNETMsg_SetConVar::has_convars() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SetConVar::set_has_convars() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SetConVar::clear_has_convars() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SetConVar::clear_convars() {
  if (convars_ != NULL) convars_->::CMsg_CVars::Clear();
  clear_has_convars();
}
inline const ::CMsg_CVars& CNETMsg_SetConVar::convars() const {
  // @@protoc_insertion_point(field_get:CNETMsg_SetConVar.convars)
  return convars_ != NULL ? *convars_ : *default_instance_->convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::mutable_convars() {
  set_has_convars();
  if (convars_ == NULL) {
    convars_ = new ::CMsg_CVars;
  }
  // @@protoc_insertion_point(field_mutable:CNETMsg_SetConVar.convars)
  return convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::release_convars() {
  clear_has_convars();
  ::CMsg_CVars* temp = convars_;
  convars_ = NULL;
  return temp;
}
inline void CNETMsg_SetConVar::set_allocated_convars(::CMsg_CVars* convars) {
  delete convars_;
  convars_ = convars;
  if (convars) {
    set_has_convars();
  } else {
    clear_has_convars();
  }
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SetConVar.convars)
}

// -------------------------------------------------------------------

// CNETMsg_NOP

// -------------------------------------------------------------------

// CNETMsg_Disconnect

// optional string text = 1;
inline bool CNETMsg_Disconnect::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Disconnect::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Disconnect::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Disconnect::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CNETMsg_Disconnect::text() const {
  // @@protoc_insertion_point(field_get:CNETMsg_Disconnect.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_Disconnect::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_Disconnect.text)
}
inline void CNETMsg_Disconnect::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_Disconnect.text)
}
inline void CNETMsg_Disconnect::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_Disconnect.text)
}
inline ::std::string* CNETMsg_Disconnect::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CNETMsg_Disconnect.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_Disconnect::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_Disconnect::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_Disconnect.text)
}

// -------------------------------------------------------------------

// CNETMsg_File

// optional int32 transfer_id = 1;
inline bool CNETMsg_File::has_transfer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_File::set_has_transfer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_File::clear_has_transfer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_File::clear_transfer_id() {
  transfer_id_ = 0;
  clear_has_transfer_id();
}
inline ::google::protobuf::int32 CNETMsg_File::transfer_id() const {
  // @@protoc_insertion_point(field_get:CNETMsg_File.transfer_id)
  return transfer_id_;
}
inline void CNETMsg_File::set_transfer_id(::google::protobuf::int32 value) {
  set_has_transfer_id();
  transfer_id_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_File.transfer_id)
}

// optional string file_name = 2;
inline bool CNETMsg_File::has_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_File::set_has_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_File::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_File::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& CNETMsg_File::file_name() const {
  // @@protoc_insertion_point(field_get:CNETMsg_File.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_File::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_File.file_name)
}
inline void CNETMsg_File::set_file_name(const char* value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_File.file_name)
}
inline void CNETMsg_File::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_File.file_name)
}
inline ::std::string* CNETMsg_File::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:CNETMsg_File.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_File::release_file_name() {
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_File::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_File.file_name)
}

// optional bool is_replay_demo_file = 3;
inline bool CNETMsg_File::has_is_replay_demo_file() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_File::set_has_is_replay_demo_file() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_File::clear_has_is_replay_demo_file() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_File::clear_is_replay_demo_file() {
  is_replay_demo_file_ = false;
  clear_has_is_replay_demo_file();
}
inline bool CNETMsg_File::is_replay_demo_file() const {
  // @@protoc_insertion_point(field_get:CNETMsg_File.is_replay_demo_file)
  return is_replay_demo_file_;
}
inline void CNETMsg_File::set_is_replay_demo_file(bool value) {
  set_has_is_replay_demo_file();
  is_replay_demo_file_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_File.is_replay_demo_file)
}

// optional bool deny = 4;
inline bool CNETMsg_File::has_deny() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_File::set_has_deny() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_File::clear_has_deny() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_File::clear_deny() {
  deny_ = false;
  clear_has_deny();
}
inline bool CNETMsg_File::deny() const {
  // @@protoc_insertion_point(field_get:CNETMsg_File.deny)
  return deny_;
}
inline void CNETMsg_File::set_deny(bool value) {
  set_has_deny();
  deny_ = value;
  // @@protoc_insertion_point(field_set:CNETMsg_File.deny)
}

// -------------------------------------------------------------------

// CSVCMsg_ServerInfo

// optional int32 protocol = 1;
inline bool CSVCMsg_ServerInfo::has_protocol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_protocol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ServerInfo::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ServerInfo::clear_protocol() {
  protocol_ = 0;
  clear_has_protocol();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::protocol() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.protocol)
  return protocol_;
}
inline void CSVCMsg_ServerInfo::set_protocol(::google::protobuf::int32 value) {
  set_has_protocol();
  protocol_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.protocol)
}

// optional int32 server_count = 2;
inline bool CSVCMsg_ServerInfo::has_server_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_server_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_ServerInfo::clear_has_server_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_ServerInfo::clear_server_count() {
  server_count_ = 0;
  clear_has_server_count();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::server_count() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.server_count)
  return server_count_;
}
inline void CSVCMsg_ServerInfo::set_server_count(::google::protobuf::int32 value) {
  set_has_server_count();
  server_count_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.server_count)
}

// optional bool is_dedicated = 3;
inline bool CSVCMsg_ServerInfo::has_is_dedicated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_dedicated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_dedicated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_ServerInfo::clear_is_dedicated() {
  is_dedicated_ = false;
  clear_has_is_dedicated();
}
inline bool CSVCMsg_ServerInfo::is_dedicated() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_dedicated)
  return is_dedicated_;
}
inline void CSVCMsg_ServerInfo::set_is_dedicated(bool value) {
  set_has_is_dedicated();
  is_dedicated_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_dedicated)
}

// optional bool is_official_valve_server = 4;
inline bool CSVCMsg_ServerInfo::has_is_official_valve_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_official_valve_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_official_valve_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_ServerInfo::clear_is_official_valve_server() {
  is_official_valve_server_ = false;
  clear_has_is_official_valve_server();
}
inline bool CSVCMsg_ServerInfo::is_official_valve_server() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_official_valve_server)
  return is_official_valve_server_;
}
inline void CSVCMsg_ServerInfo::set_is_official_valve_server(bool value) {
  set_has_is_official_valve_server();
  is_official_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_official_valve_server)
}

// optional bool is_hltv = 5;
inline bool CSVCMsg_ServerInfo::has_is_hltv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_hltv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_hltv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_ServerInfo::clear_is_hltv() {
  is_hltv_ = false;
  clear_has_is_hltv();
}
inline bool CSVCMsg_ServerInfo::is_hltv() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_hltv)
  return is_hltv_;
}
inline void CSVCMsg_ServerInfo::set_is_hltv(bool value) {
  set_has_is_hltv();
  is_hltv_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_hltv)
}

// optional bool is_replay = 6;
inline bool CSVCMsg_ServerInfo::has_is_replay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_replay() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_replay() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_ServerInfo::clear_is_replay() {
  is_replay_ = false;
  clear_has_is_replay();
}
inline bool CSVCMsg_ServerInfo::is_replay() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_replay)
  return is_replay_;
}
inline void CSVCMsg_ServerInfo::set_is_replay(bool value) {
  set_has_is_replay();
  is_replay_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_replay)
}

// optional bool is_redirecting_to_proxy_relay = 21;
inline bool CSVCMsg_ServerInfo::has_is_redirecting_to_proxy_relay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_redirecting_to_proxy_relay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_redirecting_to_proxy_relay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_ServerInfo::clear_is_redirecting_to_proxy_relay() {
  is_redirecting_to_proxy_relay_ = false;
  clear_has_is_redirecting_to_proxy_relay();
}
inline bool CSVCMsg_ServerInfo::is_redirecting_to_proxy_relay() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_redirecting_to_proxy_relay)
  return is_redirecting_to_proxy_relay_;
}
inline void CSVCMsg_ServerInfo::set_is_redirecting_to_proxy_relay(bool value) {
  set_has_is_redirecting_to_proxy_relay();
  is_redirecting_to_proxy_relay_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_redirecting_to_proxy_relay)
}

// optional int32 c_os = 7;
inline bool CSVCMsg_ServerInfo::has_c_os() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_c_os() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_ServerInfo::clear_has_c_os() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_ServerInfo::clear_c_os() {
  c_os_ = 0;
  clear_has_c_os();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::c_os() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.c_os)
  return c_os_;
}
inline void CSVCMsg_ServerInfo::set_c_os(::google::protobuf::int32 value) {
  set_has_c_os();
  c_os_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.c_os)
}

// optional fixed32 map_crc = 8;
inline bool CSVCMsg_ServerInfo::has_map_crc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_map_crc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_ServerInfo::clear_has_map_crc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_ServerInfo::clear_map_crc() {
  map_crc_ = 0u;
  clear_has_map_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::map_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.map_crc)
  return map_crc_;
}
inline void CSVCMsg_ServerInfo::set_map_crc(::google::protobuf::uint32 value) {
  set_has_map_crc();
  map_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.map_crc)
}

// optional fixed32 client_crc = 9;
inline bool CSVCMsg_ServerInfo::has_client_crc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_client_crc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_ServerInfo::clear_has_client_crc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_ServerInfo::clear_client_crc() {
  client_crc_ = 0u;
  clear_has_client_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::client_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.client_crc)
  return client_crc_;
}
inline void CSVCMsg_ServerInfo::set_client_crc(::google::protobuf::uint32 value) {
  set_has_client_crc();
  client_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.client_crc)
}

// optional fixed32 string_table_crc = 10;
inline bool CSVCMsg_ServerInfo::has_string_table_crc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_string_table_crc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSVCMsg_ServerInfo::clear_has_string_table_crc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSVCMsg_ServerInfo::clear_string_table_crc() {
  string_table_crc_ = 0u;
  clear_has_string_table_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::string_table_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.string_table_crc)
  return string_table_crc_;
}
inline void CSVCMsg_ServerInfo::set_string_table_crc(::google::protobuf::uint32 value) {
  set_has_string_table_crc();
  string_table_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.string_table_crc)
}

// optional int32 max_clients = 11;
inline bool CSVCMsg_ServerInfo::has_max_clients() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_max_clients() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSVCMsg_ServerInfo::clear_has_max_clients() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSVCMsg_ServerInfo::clear_max_clients() {
  max_clients_ = 0;
  clear_has_max_clients();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_clients() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.max_clients)
  return max_clients_;
}
inline void CSVCMsg_ServerInfo::set_max_clients(::google::protobuf::int32 value) {
  set_has_max_clients();
  max_clients_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.max_clients)
}

// optional int32 max_classes = 12;
inline bool CSVCMsg_ServerInfo::has_max_classes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_max_classes() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSVCMsg_ServerInfo::clear_has_max_classes() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSVCMsg_ServerInfo::clear_max_classes() {
  max_classes_ = 0;
  clear_has_max_classes();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_classes() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.max_classes)
  return max_classes_;
}
inline void CSVCMsg_ServerInfo::set_max_classes(::google::protobuf::int32 value) {
  set_has_max_classes();
  max_classes_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.max_classes)
}

// optional int32 player_slot = 13;
inline bool CSVCMsg_ServerInfo::has_player_slot() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_player_slot() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSVCMsg_ServerInfo::clear_has_player_slot() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSVCMsg_ServerInfo::clear_player_slot() {
  player_slot_ = 0;
  clear_has_player_slot();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::player_slot() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.player_slot)
  return player_slot_;
}
inline void CSVCMsg_ServerInfo::set_player_slot(::google::protobuf::int32 value) {
  set_has_player_slot();
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.player_slot)
}

// optional float tick_interval = 14;
inline bool CSVCMsg_ServerInfo::has_tick_interval() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_tick_interval() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSVCMsg_ServerInfo::clear_has_tick_interval() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSVCMsg_ServerInfo::clear_tick_interval() {
  tick_interval_ = 0;
  clear_has_tick_interval();
}
inline float CSVCMsg_ServerInfo::tick_interval() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.tick_interval)
  return tick_interval_;
}
inline void CSVCMsg_ServerInfo::set_tick_interval(float value) {
  set_has_tick_interval();
  tick_interval_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.tick_interval)
}

// optional string game_dir = 15;
inline bool CSVCMsg_ServerInfo::has_game_dir() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_game_dir() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSVCMsg_ServerInfo::clear_has_game_dir() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSVCMsg_ServerInfo::clear_game_dir() {
  game_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_dir();
}
inline const ::std::string& CSVCMsg_ServerInfo::game_dir() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.game_dir)
  return game_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_game_dir(const ::std::string& value) {
  set_has_game_dir();
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.game_dir)
}
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value) {
  set_has_game_dir();
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.game_dir)
}
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value, size_t size) {
  set_has_game_dir();
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.game_dir)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_game_dir() {
  set_has_game_dir();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.game_dir)
  return game_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_game_dir() {
  clear_has_game_dir();
  return game_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_game_dir(::std::string* game_dir) {
  if (game_dir != NULL) {
    set_has_game_dir();
  } else {
    clear_has_game_dir();
  }
  game_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_dir);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.game_dir)
}

// optional string map_name = 16;
inline bool CSVCMsg_ServerInfo::has_map_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_map_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSVCMsg_ServerInfo::clear_has_map_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSVCMsg_ServerInfo::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::map_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.map_name)
}
inline void CSVCMsg_ServerInfo::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.map_name)
}
inline void CSVCMsg_ServerInfo::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.map_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.map_name)
}

// optional string map_group_name = 17;
inline bool CSVCMsg_ServerInfo::has_map_group_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_map_group_name() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSVCMsg_ServerInfo::clear_has_map_group_name() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSVCMsg_ServerInfo::clear_map_group_name() {
  map_group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_group_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::map_group_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.map_group_name)
  return map_group_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_map_group_name(const ::std::string& value) {
  set_has_map_group_name();
  map_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.map_group_name)
}
inline void CSVCMsg_ServerInfo::set_map_group_name(const char* value) {
  set_has_map_group_name();
  map_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.map_group_name)
}
inline void CSVCMsg_ServerInfo::set_map_group_name(const char* value, size_t size) {
  set_has_map_group_name();
  map_group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.map_group_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_map_group_name() {
  set_has_map_group_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.map_group_name)
  return map_group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_map_group_name() {
  clear_has_map_group_name();
  return map_group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_map_group_name(::std::string* map_group_name) {
  if (map_group_name != NULL) {
    set_has_map_group_name();
  } else {
    clear_has_map_group_name();
  }
  map_group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_group_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.map_group_name)
}

// optional string sky_name = 18;
inline bool CSVCMsg_ServerInfo::has_sky_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_sky_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSVCMsg_ServerInfo::clear_has_sky_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSVCMsg_ServerInfo::clear_sky_name() {
  sky_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sky_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::sky_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.sky_name)
  return sky_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_sky_name(const ::std::string& value) {
  set_has_sky_name();
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.sky_name)
}
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value) {
  set_has_sky_name();
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.sky_name)
}
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value, size_t size) {
  set_has_sky_name();
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.sky_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_sky_name() {
  set_has_sky_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.sky_name)
  return sky_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_sky_name() {
  clear_has_sky_name();
  return sky_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_sky_name(::std::string* sky_name) {
  if (sky_name != NULL) {
    set_has_sky_name();
  } else {
    clear_has_sky_name();
  }
  sky_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sky_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.sky_name)
}

// optional string host_name = 19;
inline bool CSVCMsg_ServerInfo::has_host_name() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_host_name() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSVCMsg_ServerInfo::clear_has_host_name() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSVCMsg_ServerInfo::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::host_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.host_name)
  return host_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_host_name(const ::std::string& value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.host_name)
}
inline void CSVCMsg_ServerInfo::set_host_name(const char* value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.host_name)
}
inline void CSVCMsg_ServerInfo::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.host_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_host_name() {
  set_has_host_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_host_name() {
  clear_has_host_name();
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    set_has_host_name();
  } else {
    clear_has_host_name();
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.host_name)
}

// optional uint64 ugc_map_id = 22;
inline bool CSVCMsg_ServerInfo::has_ugc_map_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_ugc_map_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSVCMsg_ServerInfo::clear_has_ugc_map_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSVCMsg_ServerInfo::clear_ugc_map_id() {
  ugc_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_map_id();
}
inline ::google::protobuf::uint64 CSVCMsg_ServerInfo::ugc_map_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.ugc_map_id)
  return ugc_map_id_;
}
inline void CSVCMsg_ServerInfo::set_ugc_map_id(::google::protobuf::uint64 value) {
  set_has_ugc_map_id();
  ugc_map_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.ugc_map_id)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo_class_t

// optional int32 class_id = 1;
inline bool CSVCMsg_ClassInfo_class_t::has_class_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_class_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 CSVCMsg_ClassInfo_class_t::class_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.class_id)
  return class_id_;
}
inline void CSVCMsg_ClassInfo_class_t::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.class_id)
}

// optional string data_table_name = 2;
inline bool CSVCMsg_ClassInfo_class_t::has_data_table_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_data_table_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_data_table_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_data_table_name() {
  data_table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_table_name();
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::data_table_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.data_table_name)
  return data_table_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const ::std::string& value) {
  set_has_data_table_name();
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value) {
  set_has_data_table_name();
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value, size_t size) {
  set_has_data_table_name();
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_data_table_name() {
  set_has_data_table_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.class_t.data_table_name)
  return data_table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_data_table_name() {
  clear_has_data_table_name();
  return data_table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_data_table_name(::std::string* data_table_name) {
  if (data_table_name != NULL) {
    set_has_data_table_name();
  } else {
    clear_has_data_table_name();
  }
  data_table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_table_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ClassInfo.class_t.data_table_name)
}

// optional string class_name = 3;
inline bool CSVCMsg_ClassInfo_class_t::has_class_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_class_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_class_name();
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::class_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.class_name)
  return class_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const ::std::string& value) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.class_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ClassInfo.class_t.class_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ClassInfo.class_t.class_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_class_name() {
  set_has_class_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.class_t.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_class_name() {
  clear_has_class_name();
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    set_has_class_name();
  } else {
    clear_has_class_name();
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ClassInfo.class_t.class_name)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo

// optional bool create_on_client = 1;
inline bool CSVCMsg_ClassInfo::has_create_on_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo::set_has_create_on_client() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ClassInfo::clear_has_create_on_client() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ClassInfo::clear_create_on_client() {
  create_on_client_ = false;
  clear_has_create_on_client();
}
inline bool CSVCMsg_ClassInfo::create_on_client() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.create_on_client)
  return create_on_client_;
}
inline void CSVCMsg_ClassInfo::set_create_on_client(bool value) {
  set_has_create_on_client();
  create_on_client_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.create_on_client)
}

// repeated .CSVCMsg_ClassInfo.class_t classes = 2;
inline int CSVCMsg_ClassInfo::classes_size() const {
  return classes_.size();
}
inline void CSVCMsg_ClassInfo::clear_classes() {
  classes_.Clear();
}
inline const ::CSVCMsg_ClassInfo_class_t& CSVCMsg_ClassInfo::classes(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.classes)
  return classes_.Get(index);
}
inline ::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.classes)
  return classes_.Mutable(index);
}
inline ::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::add_classes() {
  // @@protoc_insertion_point(field_add:CSVCMsg_ClassInfo.classes)
  return classes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >*
CSVCMsg_ClassInfo::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_ClassInfo.classes)
  return &classes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >&
CSVCMsg_ClassInfo::classes() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_ClassInfo.classes)
  return classes_;
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable_sendprop_t

// optional int32 type = 1;
inline bool CSVCMsg_SendTable_sendprop_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.type)
  return type_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.type)
}

// optional string var_name = 2;
inline bool CSVCMsg_SendTable_sendprop_t::has_var_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_var_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_var_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_var_name();
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::var_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.var_name)
  return var_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const ::std::string& value) {
  set_has_var_name();
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value) {
  set_has_var_name();
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value, size_t size) {
  set_has_var_name();
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_var_name() {
  set_has_var_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.sendprop_t.var_name)
  return var_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_var_name() {
  clear_has_var_name();
  return var_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_var_name(::std::string* var_name) {
  if (var_name != NULL) {
    set_has_var_name();
  } else {
    clear_has_var_name();
  }
  var_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.sendprop_t.var_name)
}

// optional int32 flags = 3;
inline bool CSVCMsg_SendTable_sendprop_t::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.flags)
  return flags_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.flags)
}

// optional int32 priority = 4;
inline bool CSVCMsg_SendTable_sendprop_t::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::priority() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.priority)
  return priority_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.priority)
}

// optional string dt_name = 5;
inline bool CSVCMsg_SendTable_sendprop_t::has_dt_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_dt_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_dt_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_dt_name() {
  dt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dt_name();
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::dt_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.dt_name)
  return dt_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const ::std::string& value) {
  set_has_dt_name();
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value) {
  set_has_dt_name();
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value, size_t size) {
  set_has_dt_name();
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_dt_name() {
  set_has_dt_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.sendprop_t.dt_name)
  return dt_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_dt_name() {
  clear_has_dt_name();
  return dt_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_dt_name(::std::string* dt_name) {
  if (dt_name != NULL) {
    set_has_dt_name();
  } else {
    clear_has_dt_name();
  }
  dt_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dt_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.sendprop_t.dt_name)
}

// optional int32 num_elements = 6;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_elements() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_num_elements() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_num_elements() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_elements() {
  num_elements_ = 0;
  clear_has_num_elements();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_elements() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.num_elements)
  return num_elements_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_elements(::google::protobuf::int32 value) {
  set_has_num_elements();
  num_elements_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.num_elements)
}

// optional float low_value = 7;
inline bool CSVCMsg_SendTable_sendprop_t::has_low_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_low_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_low_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_low_value() {
  low_value_ = 0;
  clear_has_low_value();
}
inline float CSVCMsg_SendTable_sendprop_t::low_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.low_value)
  return low_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_low_value(float value) {
  set_has_low_value();
  low_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.low_value)
}

// optional float high_value = 8;
inline bool CSVCMsg_SendTable_sendprop_t::has_high_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_high_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_high_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_high_value() {
  high_value_ = 0;
  clear_has_high_value();
}
inline float CSVCMsg_SendTable_sendprop_t::high_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.high_value)
  return high_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_high_value(float value) {
  set_has_high_value();
  high_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.high_value)
}

// optional int32 num_bits = 9;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_num_bits() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_num_bits() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_bits() {
  num_bits_ = 0;
  clear_has_num_bits();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_bits() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.num_bits)
  return num_bits_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_bits(::google::protobuf::int32 value) {
  set_has_num_bits();
  num_bits_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.num_bits)
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable

// optional bool is_end = 1;
inline bool CSVCMsg_SendTable::has_is_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable::set_has_is_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SendTable::clear_has_is_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SendTable::clear_is_end() {
  is_end_ = false;
  clear_has_is_end();
}
inline bool CSVCMsg_SendTable::is_end() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.is_end)
  return is_end_;
}
inline void CSVCMsg_SendTable::set_is_end(bool value) {
  set_has_is_end();
  is_end_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.is_end)
}

// optional string net_table_name = 2;
inline bool CSVCMsg_SendTable::has_net_table_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable::set_has_net_table_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SendTable::clear_has_net_table_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SendTable::clear_net_table_name() {
  net_table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_net_table_name();
}
inline const ::std::string& CSVCMsg_SendTable::net_table_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.net_table_name)
  return net_table_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable::set_net_table_name(const ::std::string& value) {
  set_has_net_table_name();
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.net_table_name)
}
inline void CSVCMsg_SendTable::set_net_table_name(const char* value) {
  set_has_net_table_name();
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.net_table_name)
}
inline void CSVCMsg_SendTable::set_net_table_name(const char* value, size_t size) {
  set_has_net_table_name();
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.net_table_name)
}
inline ::std::string* CSVCMsg_SendTable::mutable_net_table_name() {
  set_has_net_table_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.net_table_name)
  return net_table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable::release_net_table_name() {
  clear_has_net_table_name();
  return net_table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable::set_allocated_net_table_name(::std::string* net_table_name) {
  if (net_table_name != NULL) {
    set_has_net_table_name();
  } else {
    clear_has_net_table_name();
  }
  net_table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_table_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.net_table_name)
}

// optional bool needs_decoder = 3;
inline bool CSVCMsg_SendTable::has_needs_decoder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable::set_has_needs_decoder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_SendTable::clear_has_needs_decoder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_SendTable::clear_needs_decoder() {
  needs_decoder_ = false;
  clear_has_needs_decoder();
}
inline bool CSVCMsg_SendTable::needs_decoder() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.needs_decoder)
  return needs_decoder_;
}
inline void CSVCMsg_SendTable::set_needs_decoder(bool value) {
  set_has_needs_decoder();
  needs_decoder_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.needs_decoder)
}

// repeated .CSVCMsg_SendTable.sendprop_t props = 4;
inline int CSVCMsg_SendTable::props_size() const {
  return props_.size();
}
inline void CSVCMsg_SendTable::clear_props() {
  props_.Clear();
}
inline const ::CSVCMsg_SendTable_sendprop_t& CSVCMsg_SendTable::props(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.props)
  return props_.Get(index);
}
inline ::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::mutable_props(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.props)
  return props_.Mutable(index);
}
inline ::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::add_props() {
  // @@protoc_insertion_point(field_add:CSVCMsg_SendTable.props)
  return props_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >*
CSVCMsg_SendTable::mutable_props() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_SendTable.props)
  return &props_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >&
CSVCMsg_SendTable::props() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_SendTable.props)
  return props_;
}

// -------------------------------------------------------------------

// CSVCMsg_Print

// optional string text = 1;
inline bool CSVCMsg_Print::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Print::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Print::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Print::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CSVCMsg_Print::text() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Print.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Print::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_Print.text)
}
inline void CSVCMsg_Print::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_Print.text)
}
inline void CSVCMsg_Print::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_Print.text)
}
inline ::std::string* CSVCMsg_Print::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Print.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_Print::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Print::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_Print.text)
}

// -------------------------------------------------------------------

// CSVCMsg_SetPause

// optional bool paused = 1;
inline bool CSVCMsg_SetPause::has_paused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetPause::set_has_paused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SetPause::clear_has_paused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SetPause::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
inline bool CSVCMsg_SetPause::paused() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SetPause.paused)
  return paused_;
}
inline void CSVCMsg_SetPause::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SetPause.paused)
}

// -------------------------------------------------------------------

// CSVCMsg_SetView

// optional int32 entity_index = 1;
inline bool CSVCMsg_SetView::has_entity_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetView::set_has_entity_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SetView::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SetView::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_SetView::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SetView.entity_index)
  return entity_index_;
}
inline void CSVCMsg_SetView::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SetView.entity_index)
}

// -------------------------------------------------------------------

// CSVCMsg_CreateStringTable

// optional string name = 1;
inline bool CSVCMsg_CreateStringTable::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_CreateStringTable::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_CreateStringTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CSVCMsg_CreateStringTable::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.name)
}
inline void CSVCMsg_CreateStringTable::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_CreateStringTable.name)
}
inline void CSVCMsg_CreateStringTable::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_CreateStringTable.name)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CreateStringTable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_CreateStringTable::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CreateStringTable.name)
}

// optional int32 max_entries = 2;
inline bool CSVCMsg_CreateStringTable::has_max_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_max_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_CreateStringTable::clear_has_max_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_CreateStringTable::clear_max_entries() {
  max_entries_ = 0;
  clear_has_max_entries();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::max_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.max_entries)
  return max_entries_;
}
inline void CSVCMsg_CreateStringTable::set_max_entries(::google::protobuf::int32 value) {
  set_has_max_entries();
  max_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.max_entries)
}

// optional int32 num_entries = 3;
inline bool CSVCMsg_CreateStringTable::has_num_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_num_entries() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_CreateStringTable::clear_has_num_entries() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_CreateStringTable::clear_num_entries() {
  num_entries_ = 0;
  clear_has_num_entries();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::num_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.num_entries)
  return num_entries_;
}
inline void CSVCMsg_CreateStringTable::set_num_entries(::google::protobuf::int32 value) {
  set_has_num_entries();
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.num_entries)
}

// optional bool user_data_fixed_size = 4;
inline bool CSVCMsg_CreateStringTable::has_user_data_fixed_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_fixed_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_fixed_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_fixed_size() {
  user_data_fixed_size_ = false;
  clear_has_user_data_fixed_size();
}
inline bool CSVCMsg_CreateStringTable::user_data_fixed_size() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_fixed_size)
  return user_data_fixed_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_fixed_size(bool value) {
  set_has_user_data_fixed_size();
  user_data_fixed_size_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_fixed_size)
}

// optional int32 user_data_size = 5;
inline bool CSVCMsg_CreateStringTable::has_user_data_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size() {
  user_data_size_ = 0;
  clear_has_user_data_size();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_size)
  return user_data_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size(::google::protobuf::int32 value) {
  set_has_user_data_size();
  user_data_size_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_size)
}

// optional int32 user_data_size_bits = 6;
inline bool CSVCMsg_CreateStringTable::has_user_data_size_bits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_size_bits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_size_bits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size_bits() {
  user_data_size_bits_ = 0;
  clear_has_user_data_size_bits();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size_bits() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_size_bits)
  return user_data_size_bits_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size_bits(::google::protobuf::int32 value) {
  set_has_user_data_size_bits();
  user_data_size_bits_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_size_bits)
}

// optional int32 flags = 7;
inline bool CSVCMsg_CreateStringTable::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_CreateStringTable::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_CreateStringTable::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.flags)
  return flags_;
}
inline void CSVCMsg_CreateStringTable::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.flags)
}

// optional bytes string_data = 8;
inline bool CSVCMsg_CreateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_string_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_CreateStringTable::clear_has_string_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_CreateStringTable::clear_string_data() {
  string_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_data();
}
inline const ::std::string& CSVCMsg_CreateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.string_data)
  return string_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_string_data(const ::std::string& value) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.string_data)
}
inline void CSVCMsg_CreateStringTable::set_string_data(const char* value) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_CreateStringTable.string_data)
}
inline void CSVCMsg_CreateStringTable::set_string_data(const void* value, size_t size) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_CreateStringTable.string_data)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_string_data() {
  set_has_string_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CreateStringTable.string_data)
  return string_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_CreateStringTable::release_string_data() {
  clear_has_string_data();
  return string_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data != NULL) {
    set_has_string_data();
  } else {
    clear_has_string_data();
  }
  string_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CreateStringTable.string_data)
}

// -------------------------------------------------------------------

// CSVCMsg_UpdateStringTable

// optional int32 table_id = 1;
inline bool CSVCMsg_UpdateStringTable::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_UpdateStringTable::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::table_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.table_id)
  return table_id_;
}
inline void CSVCMsg_UpdateStringTable::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.table_id)
}

// optional int32 num_changed_entries = 2;
inline bool CSVCMsg_UpdateStringTable::has_num_changed_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_num_changed_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_num_changed_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_UpdateStringTable::clear_num_changed_entries() {
  num_changed_entries_ = 0;
  clear_has_num_changed_entries();
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::num_changed_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.num_changed_entries)
  return num_changed_entries_;
}
inline void CSVCMsg_UpdateStringTable::set_num_changed_entries(::google::protobuf::int32 value) {
  set_has_num_changed_entries();
  num_changed_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.num_changed_entries)
}

// optional bytes string_data = 3;
inline bool CSVCMsg_UpdateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_string_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_string_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_UpdateStringTable::clear_string_data() {
  string_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_data();
}
inline const ::std::string& CSVCMsg_UpdateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.string_data)
  return string_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const ::std::string& value) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.string_data)
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const char* value) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_UpdateStringTable.string_data)
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const void* value, size_t size) {
  set_has_string_data();
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_UpdateStringTable.string_data)
}
inline ::std::string* CSVCMsg_UpdateStringTable::mutable_string_data() {
  set_has_string_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_UpdateStringTable.string_data)
  return string_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_UpdateStringTable::release_string_data() {
  clear_has_string_data();
  return string_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UpdateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data != NULL) {
    set_has_string_data();
  } else {
    clear_has_string_data();
  }
  string_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_UpdateStringTable.string_data)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceInit

// optional int32 quality = 1;
inline bool CSVCMsg_VoiceInit::has_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceInit::set_has_quality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_VoiceInit::clear_has_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_VoiceInit::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceInit::quality() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceInit.quality)
  return quality_;
}
inline void CSVCMsg_VoiceInit::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceInit.quality)
}

// optional string codec = 2;
inline bool CSVCMsg_VoiceInit::has_codec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceInit::set_has_codec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_VoiceInit::clear_has_codec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_VoiceInit::clear_codec() {
  codec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_codec();
}
inline const ::std::string& CSVCMsg_VoiceInit::codec() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceInit.codec)
  return codec_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_VoiceInit::set_codec(const ::std::string& value) {
  set_has_codec();
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceInit.codec)
}
inline void CSVCMsg_VoiceInit::set_codec(const char* value) {
  set_has_codec();
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_VoiceInit.codec)
}
inline void CSVCMsg_VoiceInit::set_codec(const char* value, size_t size) {
  set_has_codec();
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_VoiceInit.codec)
}
inline ::std::string* CSVCMsg_VoiceInit::mutable_codec() {
  set_has_codec();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_VoiceInit.codec)
  return codec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_VoiceInit::release_codec() {
  clear_has_codec();
  return codec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_VoiceInit::set_allocated_codec(::std::string* codec) {
  if (codec != NULL) {
    set_has_codec();
  } else {
    clear_has_codec();
  }
  codec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codec);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_VoiceInit.codec)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceData

// optional int32 client = 1;
inline bool CSVCMsg_VoiceData::has_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_client() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_VoiceData::clear_has_client() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_VoiceData::clear_client() {
  client_ = 0;
  clear_has_client();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::client() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.client)
  return client_;
}
inline void CSVCMsg_VoiceData::set_client(::google::protobuf::int32 value) {
  set_has_client();
  client_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.client)
}

// optional bool proximity = 2;
inline bool CSVCMsg_VoiceData::has_proximity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_proximity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_VoiceData::clear_has_proximity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_VoiceData::clear_proximity() {
  proximity_ = false;
  clear_has_proximity();
}
inline bool CSVCMsg_VoiceData::proximity() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.proximity)
  return proximity_;
}
inline void CSVCMsg_VoiceData::set_proximity(bool value) {
  set_has_proximity();
  proximity_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.proximity)
}

// optional fixed64 xuid = 3;
inline bool CSVCMsg_VoiceData::has_xuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_xuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_VoiceData::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_VoiceData::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CSVCMsg_VoiceData::xuid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.xuid)
  return xuid_;
}
inline void CSVCMsg_VoiceData::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.xuid)
}

// optional int32 audible_mask = 4;
inline bool CSVCMsg_VoiceData::has_audible_mask() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_audible_mask() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_VoiceData::clear_has_audible_mask() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_VoiceData::clear_audible_mask() {
  audible_mask_ = 0;
  clear_has_audible_mask();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::audible_mask() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.audible_mask)
  return audible_mask_;
}
inline void CSVCMsg_VoiceData::set_audible_mask(::google::protobuf::int32 value) {
  set_has_audible_mask();
  audible_mask_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.audible_mask)
}

// optional bytes voice_data = 5;
inline bool CSVCMsg_VoiceData::has_voice_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_voice_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_VoiceData::clear_has_voice_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_VoiceData::clear_voice_data() {
  voice_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_data();
}
inline const ::std::string& CSVCMsg_VoiceData::voice_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.voice_data)
  return voice_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_VoiceData::set_voice_data(const ::std::string& value) {
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.voice_data)
}
inline void CSVCMsg_VoiceData::set_voice_data(const char* value) {
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_VoiceData.voice_data)
}
inline void CSVCMsg_VoiceData::set_voice_data(const void* value, size_t size) {
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_VoiceData.voice_data)
}
inline ::std::string* CSVCMsg_VoiceData::mutable_voice_data() {
  set_has_voice_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_VoiceData.voice_data)
  return voice_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_VoiceData::release_voice_data() {
  clear_has_voice_data();
  return voice_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_VoiceData::set_allocated_voice_data(::std::string* voice_data) {
  if (voice_data != NULL) {
    set_has_voice_data();
  } else {
    clear_has_voice_data();
  }
  voice_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_VoiceData.voice_data)
}

// -------------------------------------------------------------------

// CSVCMsg_FixAngle

// optional bool relative = 1;
inline bool CSVCMsg_FixAngle::has_relative() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_FixAngle::set_has_relative() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_FixAngle::clear_has_relative() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_FixAngle::clear_relative() {
  relative_ = false;
  clear_has_relative();
}
inline bool CSVCMsg_FixAngle::relative() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FixAngle.relative)
  return relative_;
}
inline void CSVCMsg_FixAngle::set_relative(bool value) {
  set_has_relative();
  relative_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_FixAngle.relative)
}

// optional .CMsgQAngle angle = 2;
inline bool CSVCMsg_FixAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_FixAngle::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_FixAngle::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_FixAngle::clear_angle() {
  if (angle_ != NULL) angle_->::CMsgQAngle::Clear();
  clear_has_angle();
}
inline const ::CMsgQAngle& CSVCMsg_FixAngle::angle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FixAngle.angle)
  return angle_ != NULL ? *angle_ : *default_instance_->angle_;
}
inline ::CMsgQAngle* CSVCMsg_FixAngle::mutable_angle() {
  set_has_angle();
  if (angle_ == NULL) {
    angle_ = new ::CMsgQAngle;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FixAngle.angle)
  return angle_;
}
inline ::CMsgQAngle* CSVCMsg_FixAngle::release_angle() {
  clear_has_angle();
  ::CMsgQAngle* temp = angle_;
  angle_ = NULL;
  return temp;
}
inline void CSVCMsg_FixAngle::set_allocated_angle(::CMsgQAngle* angle) {
  delete angle_;
  angle_ = angle;
  if (angle) {
    set_has_angle();
  } else {
    clear_has_angle();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_FixAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_CrosshairAngle

// optional .CMsgQAngle angle = 1;
inline bool CSVCMsg_CrosshairAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CrosshairAngle::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_CrosshairAngle::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_CrosshairAngle::clear_angle() {
  if (angle_ != NULL) angle_->::CMsgQAngle::Clear();
  clear_has_angle();
}
inline const ::CMsgQAngle& CSVCMsg_CrosshairAngle::angle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CrosshairAngle.angle)
  return angle_ != NULL ? *angle_ : *default_instance_->angle_;
}
inline ::CMsgQAngle* CSVCMsg_CrosshairAngle::mutable_angle() {
  set_has_angle();
  if (angle_ == NULL) {
    angle_ = new ::CMsgQAngle;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CrosshairAngle.angle)
  return angle_;
}
inline ::CMsgQAngle* CSVCMsg_CrosshairAngle::release_angle() {
  clear_has_angle();
  ::CMsgQAngle* temp = angle_;
  angle_ = NULL;
  return temp;
}
inline void CSVCMsg_CrosshairAngle::set_allocated_angle(::CMsgQAngle* angle) {
  delete angle_;
  angle_ = angle;
  if (angle) {
    set_has_angle();
  } else {
    clear_has_angle();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CrosshairAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_Prefetch

// optional int32 sound_index = 1;
inline bool CSVCMsg_Prefetch::has_sound_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Prefetch::set_has_sound_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Prefetch::clear_has_sound_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Prefetch::clear_sound_index() {
  sound_index_ = 0;
  clear_has_sound_index();
}
inline ::google::protobuf::int32 CSVCMsg_Prefetch::sound_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Prefetch.sound_index)
  return sound_index_;
}
inline void CSVCMsg_Prefetch::set_sound_index(::google::protobuf::int32 value) {
  set_has_sound_index();
  sound_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Prefetch.sound_index)
}

// -------------------------------------------------------------------

// CSVCMsg_BSPDecal

// optional .CMsgVector pos = 1;
inline bool CSVCMsg_BSPDecal::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_BSPDecal::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_BSPDecal::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector::Clear();
  clear_has_pos();
}
inline const ::CMsgVector& CSVCMsg_BSPDecal::pos() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::CMsgVector* CSVCMsg_BSPDecal::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_BSPDecal.pos)
  return pos_;
}
inline ::CMsgVector* CSVCMsg_BSPDecal::release_pos() {
  clear_has_pos();
  ::CMsgVector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CSVCMsg_BSPDecal::set_allocated_pos(::CMsgVector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_BSPDecal.pos)
}

// optional int32 decal_texture_index = 2;
inline bool CSVCMsg_BSPDecal::has_decal_texture_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_decal_texture_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_BSPDecal::clear_has_decal_texture_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_BSPDecal::clear_decal_texture_index() {
  decal_texture_index_ = 0;
  clear_has_decal_texture_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::decal_texture_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.decal_texture_index)
  return decal_texture_index_;
}
inline void CSVCMsg_BSPDecal::set_decal_texture_index(::google::protobuf::int32 value) {
  set_has_decal_texture_index();
  decal_texture_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.decal_texture_index)
}

// optional int32 entity_index = 3;
inline bool CSVCMsg_BSPDecal::has_entity_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_entity_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_BSPDecal::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_BSPDecal::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.entity_index)
  return entity_index_;
}
inline void CSVCMsg_BSPDecal::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.entity_index)
}

// optional int32 model_index = 4;
inline bool CSVCMsg_BSPDecal::has_model_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_model_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_BSPDecal::clear_has_model_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_BSPDecal::clear_model_index() {
  model_index_ = 0;
  clear_has_model_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::model_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.model_index)
  return model_index_;
}
inline void CSVCMsg_BSPDecal::set_model_index(::google::protobuf::int32 value) {
  set_has_model_index();
  model_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.model_index)
}

// optional bool low_priority = 5;
inline bool CSVCMsg_BSPDecal::has_low_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_low_priority() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_BSPDecal::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_BSPDecal::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CSVCMsg_BSPDecal::low_priority() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.low_priority)
  return low_priority_;
}
inline void CSVCMsg_BSPDecal::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.low_priority)
}

// -------------------------------------------------------------------

// CSVCMsg_GetCvarValue

// optional int32 cookie = 1;
inline bool CSVCMsg_GetCvarValue::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GetCvarValue::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GetCvarValue::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GetCvarValue::clear_cookie() {
  cookie_ = 0;
  clear_has_cookie();
}
inline ::google::protobuf::int32 CSVCMsg_GetCvarValue::cookie() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GetCvarValue.cookie)
  return cookie_;
}
inline void CSVCMsg_GetCvarValue::set_cookie(::google::protobuf::int32 value) {
  set_has_cookie();
  cookie_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GetCvarValue.cookie)
}

// optional string cvar_name = 2;
inline bool CSVCMsg_GetCvarValue::has_cvar_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GetCvarValue::set_has_cvar_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GetCvarValue::clear_has_cvar_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GetCvarValue::clear_cvar_name() {
  cvar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cvar_name();
}
inline const ::std::string& CSVCMsg_GetCvarValue::cvar_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GetCvarValue.cvar_name)
  return cvar_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const ::std::string& value) {
  set_has_cvar_name();
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GetCvarValue.cvar_name)
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value) {
  set_has_cvar_name();
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GetCvarValue.cvar_name)
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value, size_t size) {
  set_has_cvar_name();
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GetCvarValue.cvar_name)
}
inline ::std::string* CSVCMsg_GetCvarValue::mutable_cvar_name() {
  set_has_cvar_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GetCvarValue.cvar_name)
  return cvar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GetCvarValue::release_cvar_name() {
  clear_has_cvar_name();
  return cvar_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GetCvarValue::set_allocated_cvar_name(::std::string* cvar_name) {
  if (cvar_name != NULL) {
    set_has_cvar_name();
  } else {
    clear_has_cvar_name();
  }
  cvar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cvar_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GetCvarValue.cvar_name)
}

// -------------------------------------------------------------------

// CSVCMsg_Menu

// optional int32 dialog_type = 1;
inline bool CSVCMsg_Menu::has_dialog_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Menu::set_has_dialog_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Menu::clear_has_dialog_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Menu::clear_dialog_type() {
  dialog_type_ = 0;
  clear_has_dialog_type();
}
inline ::google::protobuf::int32 CSVCMsg_Menu::dialog_type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Menu.dialog_type)
  return dialog_type_;
}
inline void CSVCMsg_Menu::set_dialog_type(::google::protobuf::int32 value) {
  set_has_dialog_type();
  dialog_type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Menu.dialog_type)
}

// optional bytes menu_key_values = 2;
inline bool CSVCMsg_Menu::has_menu_key_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Menu::set_has_menu_key_values() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_Menu::clear_has_menu_key_values() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_Menu::clear_menu_key_values() {
  menu_key_values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_menu_key_values();
}
inline const ::std::string& CSVCMsg_Menu::menu_key_values() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Menu.menu_key_values)
  return menu_key_values_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Menu::set_menu_key_values(const ::std::string& value) {
  set_has_menu_key_values();
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_Menu.menu_key_values)
}
inline void CSVCMsg_Menu::set_menu_key_values(const char* value) {
  set_has_menu_key_values();
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_Menu.menu_key_values)
}
inline void CSVCMsg_Menu::set_menu_key_values(const void* value, size_t size) {
  set_has_menu_key_values();
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_Menu.menu_key_values)
}
inline ::std::string* CSVCMsg_Menu::mutable_menu_key_values() {
  set_has_menu_key_values();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Menu.menu_key_values)
  return menu_key_values_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_Menu::release_menu_key_values() {
  clear_has_menu_key_values();
  return menu_key_values_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Menu::set_allocated_menu_key_values(::std::string* menu_key_values) {
  if (menu_key_values != NULL) {
    set_has_menu_key_values();
  } else {
    clear_has_menu_key_values();
  }
  menu_key_values_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), menu_key_values);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_Menu.menu_key_values)
}

// -------------------------------------------------------------------

// CSVCMsg_UserMessage

// optional int32 msg_type = 1;
inline bool CSVCMsg_UserMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CSVCMsg_UserMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UserMessage.msg_type)
  return msg_type_;
}
inline void CSVCMsg_UserMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UserMessage.msg_type)
}

// optional bytes msg_data = 2;
inline bool CSVCMsg_UserMessage::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
inline const ::std::string& CSVCMsg_UserMessage::msg_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UserMessage.msg_data)
  return msg_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UserMessage::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_UserMessage.msg_data)
}
inline void CSVCMsg_UserMessage::set_msg_data(const char* value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_UserMessage.msg_data)
}
inline void CSVCMsg_UserMessage::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_UserMessage.msg_data)
}
inline ::std::string* CSVCMsg_UserMessage::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_UserMessage.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_UserMessage::release_msg_data() {
  clear_has_msg_data();
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UserMessage::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_UserMessage.msg_data)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEvent_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.type)
  return type_;
}
inline void CSVCMsg_GameEvent_key_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.type)
}

// optional string val_string = 2;
inline bool CSVCMsg_GameEvent_key_t::has_val_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_string() {
  val_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val_string();
}
inline const ::std::string& CSVCMsg_GameEvent_key_t::val_string() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_string)
  return val_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const ::std::string& value) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_string)
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEvent.key_t.val_string)
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value, size_t size) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEvent.key_t.val_string)
}
inline ::std::string* CSVCMsg_GameEvent_key_t::mutable_val_string() {
  set_has_val_string();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.key_t.val_string)
  return val_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEvent_key_t::release_val_string() {
  clear_has_val_string();
  return val_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_allocated_val_string(::std::string* val_string) {
  if (val_string != NULL) {
    set_has_val_string();
  } else {
    clear_has_val_string();
  }
  val_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val_string);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEvent.key_t.val_string)
}

// optional float val_float = 3;
inline bool CSVCMsg_GameEvent_key_t::has_val_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_float() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_float() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_float() {
  val_float_ = 0;
  clear_has_val_float();
}
inline float CSVCMsg_GameEvent_key_t::val_float() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_float)
  return val_float_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_float(float value) {
  set_has_val_float();
  val_float_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_float)
}

// optional int32 val_long = 4;
inline bool CSVCMsg_GameEvent_key_t::has_val_long() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_long() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_long() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_long() {
  val_long_ = 0;
  clear_has_val_long();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_long() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_long)
  return val_long_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_long(::google::protobuf::int32 value) {
  set_has_val_long();
  val_long_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_long)
}

// optional int32 val_short = 5;
inline bool CSVCMsg_GameEvent_key_t::has_val_short() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_short() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_short() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_short() {
  val_short_ = 0;
  clear_has_val_short();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_short() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_short)
  return val_short_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_short(::google::protobuf::int32 value) {
  set_has_val_short();
  val_short_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_short)
}

// optional int32 val_byte = 6;
inline bool CSVCMsg_GameEvent_key_t::has_val_byte() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_byte() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_byte() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_byte() {
  val_byte_ = 0;
  clear_has_val_byte();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_byte() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_byte)
  return val_byte_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_byte(::google::protobuf::int32 value) {
  set_has_val_byte();
  val_byte_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_byte)
}

// optional bool val_bool = 7;
inline bool CSVCMsg_GameEvent_key_t::has_val_bool() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_bool() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_bool() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_bool() {
  val_bool_ = false;
  clear_has_val_bool();
}
inline bool CSVCMsg_GameEvent_key_t::val_bool() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_bool)
  return val_bool_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_bool(bool value) {
  set_has_val_bool();
  val_bool_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_bool)
}

// optional uint64 val_uint64 = 8;
inline bool CSVCMsg_GameEvent_key_t::has_val_uint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_uint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_uint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_uint64() {
  val_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_val_uint64();
}
inline ::google::protobuf::uint64 CSVCMsg_GameEvent_key_t::val_uint64() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_uint64)
  return val_uint64_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_uint64(::google::protobuf::uint64 value) {
  set_has_val_uint64();
  val_uint64_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_uint64)
}

// optional bytes val_wstring = 9;
inline bool CSVCMsg_GameEvent_key_t::has_val_wstring() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_wstring() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_wstring() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_wstring() {
  val_wstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val_wstring();
}
inline const ::std::string& CSVCMsg_GameEvent_key_t::val_wstring() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.key_t.val_wstring)
  return val_wstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_val_wstring(const ::std::string& value) {
  set_has_val_wstring();
  val_wstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.key_t.val_wstring)
}
inline void CSVCMsg_GameEvent_key_t::set_val_wstring(const char* value) {
  set_has_val_wstring();
  val_wstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEvent.key_t.val_wstring)
}
inline void CSVCMsg_GameEvent_key_t::set_val_wstring(const void* value, size_t size) {
  set_has_val_wstring();
  val_wstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEvent.key_t.val_wstring)
}
inline ::std::string* CSVCMsg_GameEvent_key_t::mutable_val_wstring() {
  set_has_val_wstring();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.key_t.val_wstring)
  return val_wstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEvent_key_t::release_val_wstring() {
  clear_has_val_wstring();
  return val_wstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent_key_t::set_allocated_val_wstring(::std::string* val_wstring) {
  if (val_wstring != NULL) {
    set_has_val_wstring();
  } else {
    clear_has_val_wstring();
  }
  val_wstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val_wstring);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEvent.key_t.val_wstring)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent

// optional string event_name = 1;
inline bool CSVCMsg_GameEvent::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_event_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_has_event_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_event_name();
}
inline const ::std::string& CSVCMsg_GameEvent::event_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.event_name)
  return event_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent::set_event_name(const ::std::string& value) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.event_name)
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEvent.event_name)
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value, size_t size) {
  set_has_event_name();
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEvent.event_name)
}
inline ::std::string* CSVCMsg_GameEvent::mutable_event_name() {
  set_has_event_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEvent::release_event_name() {
  clear_has_event_name();
  return event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    set_has_event_name();
  } else {
    clear_has_event_name();
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEvent.event_name)
}

// optional int32 eventid = 2;
inline bool CSVCMsg_GameEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent::eventid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.eventid)
  return eventid_;
}
inline void CSVCMsg_GameEvent::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEvent.eventid)
}

// repeated .CSVCMsg_GameEvent.key_t keys = 3;
inline int CSVCMsg_GameEvent::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEvent::clear_keys() {
  keys_.Clear();
}
inline const ::CSVCMsg_GameEvent_key_t& CSVCMsg_GameEvent::keys(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEvent.keys)
  return keys_.Get(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEvent.keys)
  return keys_.Mutable(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::add_keys() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEvent.keys)
  return keys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
CSVCMsg_GameEvent::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEvent.keys)
  return &keys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
CSVCMsg_GameEvent::keys() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEvent.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEventList_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEventList_key_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEventList_key_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_key_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.key_t.type)
  return type_;
}
inline void CSVCMsg_GameEventList_key_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.key_t.type)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_key_t::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEventList_key_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEventList_key_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CSVCMsg_GameEventList_key_t::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.key_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_key_t::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.key_t.name)
}
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEventList.key_t.name)
}
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEventList.key_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_key_t::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.key_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEventList_key_t::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_key_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEventList.key_t.name)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_descriptor_t

// optional int32 eventid = 1;
inline bool CSVCMsg_GameEventList_descriptor_t::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_descriptor_t::eventid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.eventid)
  return eventid_;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.descriptor_t.eventid)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_descriptor_t::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CSVCMsg_GameEventList_descriptor_t::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.descriptor_t.name)
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEventList.descriptor_t.name)
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEventList.descriptor_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptor_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_descriptor_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEventList.descriptor_t.name)
}

// repeated .CSVCMsg_GameEventList.key_t keys = 3;
inline int CSVCMsg_GameEventList_descriptor_t::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_keys() {
  keys_.Clear();
}
inline const ::CSVCMsg_GameEventList_key_t& CSVCMsg_GameEventList_descriptor_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Get(index);
}
inline ::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Mutable(index);
}
inline ::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::add_keys() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >*
CSVCMsg_GameEventList_descriptor_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEventList.descriptor_t.keys)
  return &keys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >&
CSVCMsg_GameEventList_descriptor_t::keys() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList

// repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
inline int CSVCMsg_GameEventList::descriptors_size() const {
  return descriptors_.size();
}
inline void CSVCMsg_GameEventList::clear_descriptors() {
  descriptors_.Clear();
}
inline const ::CSVCMsg_GameEventList_descriptor_t& CSVCMsg_GameEventList::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Get(index);
}
inline ::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Mutable(index);
}
inline ::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::add_descriptors() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >*
CSVCMsg_GameEventList::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEventList.descriptors)
  return &descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >&
CSVCMsg_GameEventList::descriptors() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEventList.descriptors)
  return descriptors_;
}

// -------------------------------------------------------------------

// CSVCMsg_TempEntities

// optional bool reliable = 1;
inline bool CSVCMsg_TempEntities::has_reliable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_reliable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_TempEntities::clear_has_reliable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_TempEntities::clear_reliable() {
  reliable_ = false;
  clear_has_reliable();
}
inline bool CSVCMsg_TempEntities::reliable() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.reliable)
  return reliable_;
}
inline void CSVCMsg_TempEntities::set_reliable(bool value) {
  set_has_reliable();
  reliable_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.reliable)
}

// optional int32 num_entries = 2;
inline bool CSVCMsg_TempEntities::has_num_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_num_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_TempEntities::clear_has_num_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_TempEntities::clear_num_entries() {
  num_entries_ = 0;
  clear_has_num_entries();
}
inline ::google::protobuf::int32 CSVCMsg_TempEntities::num_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.num_entries)
  return num_entries_;
}
inline void CSVCMsg_TempEntities::set_num_entries(::google::protobuf::int32 value) {
  set_has_num_entries();
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.num_entries)
}

// optional bytes entity_data = 3;
inline bool CSVCMsg_TempEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_entity_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_TempEntities::clear_has_entity_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_TempEntities::clear_entity_data() {
  entity_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entity_data();
}
inline const ::std::string& CSVCMsg_TempEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.entity_data)
  return entity_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_TempEntities::set_entity_data(const ::std::string& value) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.entity_data)
}
inline void CSVCMsg_TempEntities::set_entity_data(const char* value) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_TempEntities.entity_data)
}
inline void CSVCMsg_TempEntities::set_entity_data(const void* value, size_t size) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_TempEntities.entity_data)
}
inline ::std::string* CSVCMsg_TempEntities::mutable_entity_data() {
  set_has_entity_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_TempEntities.entity_data)
  return entity_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_TempEntities::release_entity_data() {
  clear_has_entity_data();
  return entity_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_TempEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data != NULL) {
    set_has_entity_data();
  } else {
    clear_has_entity_data();
  }
  entity_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_TempEntities.entity_data)
}

// -------------------------------------------------------------------

// CSVCMsg_PacketEntities

// optional int32 max_entries = 1;
inline bool CSVCMsg_PacketEntities::has_max_entries() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_max_entries() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_PacketEntities::clear_has_max_entries() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_PacketEntities::clear_max_entries() {
  max_entries_ = 0;
  clear_has_max_entries();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::max_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.max_entries)
  return max_entries_;
}
inline void CSVCMsg_PacketEntities::set_max_entries(::google::protobuf::int32 value) {
  set_has_max_entries();
  max_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.max_entries)
}

// optional int32 updated_entries = 2;
inline bool CSVCMsg_PacketEntities::has_updated_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_updated_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_PacketEntities::clear_has_updated_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_PacketEntities::clear_updated_entries() {
  updated_entries_ = 0;
  clear_has_updated_entries();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::updated_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.updated_entries)
  return updated_entries_;
}
inline void CSVCMsg_PacketEntities::set_updated_entries(::google::protobuf::int32 value) {
  set_has_updated_entries();
  updated_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.updated_entries)
}

// optional bool is_delta = 3;
inline bool CSVCMsg_PacketEntities::has_is_delta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_is_delta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_PacketEntities::clear_has_is_delta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_PacketEntities::clear_is_delta() {
  is_delta_ = false;
  clear_has_is_delta();
}
inline bool CSVCMsg_PacketEntities::is_delta() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.is_delta)
  return is_delta_;
}
inline void CSVCMsg_PacketEntities::set_is_delta(bool value) {
  set_has_is_delta();
  is_delta_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.is_delta)
}

// optional bool update_baseline = 4;
inline bool CSVCMsg_PacketEntities::has_update_baseline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_update_baseline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_PacketEntities::clear_has_update_baseline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_PacketEntities::clear_update_baseline() {
  update_baseline_ = false;
  clear_has_update_baseline();
}
inline bool CSVCMsg_PacketEntities::update_baseline() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.update_baseline)
  return update_baseline_;
}
inline void CSVCMsg_PacketEntities::set_update_baseline(bool value) {
  set_has_update_baseline();
  update_baseline_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.update_baseline)
}

// optional int32 baseline = 5;
inline bool CSVCMsg_PacketEntities::has_baseline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_baseline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_PacketEntities::clear_has_baseline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_PacketEntities::clear_baseline() {
  baseline_ = 0;
  clear_has_baseline();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::baseline() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.baseline)
  return baseline_;
}
inline void CSVCMsg_PacketEntities::set_baseline(::google::protobuf::int32 value) {
  set_has_baseline();
  baseline_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.baseline)
}

// optional int32 delta_from = 6;
inline bool CSVCMsg_PacketEntities::has_delta_from() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_delta_from() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_PacketEntities::clear_has_delta_from() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_PacketEntities::clear_delta_from() {
  delta_from_ = 0;
  clear_has_delta_from();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::delta_from() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.delta_from)
  return delta_from_;
}
inline void CSVCMsg_PacketEntities::set_delta_from(::google::protobuf::int32 value) {
  set_has_delta_from();
  delta_from_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.delta_from)
}

// optional bytes entity_data = 7;
inline bool CSVCMsg_PacketEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_entity_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_PacketEntities::clear_has_entity_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_PacketEntities::clear_entity_data() {
  entity_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entity_data();
}
inline const ::std::string& CSVCMsg_PacketEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.entity_data)
  return entity_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_PacketEntities::set_entity_data(const ::std::string& value) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.entity_data)
}
inline void CSVCMsg_PacketEntities::set_entity_data(const char* value) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSVCMsg_PacketEntities.entity_data)
}
inline void CSVCMsg_PacketEntities::set_entity_data(const void* value, size_t size) {
  set_has_entity_data();
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_PacketEntities.entity_data)
}
inline ::std::string* CSVCMsg_PacketEntities::mutable_entity_data() {
  set_has_entity_data();
  // @@protoc_insertion_point(field_mutable:CSVCMsg_PacketEntities.entity_data)
  return entity_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_PacketEntities::release_entity_data() {
  clear_has_entity_data();
  return entity_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_PacketEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data != NULL) {
    set_has_entity_data();
  } else {
    clear_has_entity_data();
  }
  entity_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_data);
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_PacketEntities.entity_data)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds_sounddata_t

// optional sint32 origin_x = 1;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_x() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_x)
  return origin_x_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_x(::google::protobuf::int32 value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_x)
}

// optional sint32 origin_y = 2;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_y() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_y)
  return origin_y_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_y(::google::protobuf::int32 value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_y)
}

// optional sint32 origin_z = 3;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_z() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_z)
  return origin_z_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_z(::google::protobuf::int32 value) {
  set_has_origin_z();
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_z)
}

// optional uint32 volume = 4;
inline bool CSVCMsg_Sounds_sounddata_t::has_volume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_volume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_volume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_volume() {
  volume_ = 0u;
  clear_has_volume();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::volume() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.volume)
  return volume_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_volume(::google::protobuf::uint32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.volume)
}

// optional float delay_value = 5;
inline bool CSVCMsg_Sounds_sounddata_t::has_delay_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_delay_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_delay_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_delay_value() {
  delay_value_ = 0;
  clear_has_delay_value();
}
inline float CSVCMsg_Sounds_sounddata_t::delay_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.delay_value)
  return delay_value_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_delay_value(float value) {
  set_has_delay_value();
  delay_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.delay_value)
}

// optional int32 sequence_number = 6;
inline bool CSVCMsg_Sounds_sounddata_t::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sequence_number() {
  sequence_number_ = 0;
  clear_has_sequence_number();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sequence_number() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sequence_number)
  return sequence_number_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sequence_number(::google::protobuf::int32 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sequence_number)
}

// optional int32 entity_index = 7;
inline bool CSVCMsg_Sounds_sounddata_t::has_entity_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_entity_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.entity_index)
  return entity_index_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.entity_index)
}

// optional int32 channel = 8;
inline bool CSVCMsg_Sounds_sounddata_t::has_channel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_channel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_channel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::channel() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.channel)
  return channel_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.channel)
}

// optional int32 pitch = 9;
inline bool CSVCMsg_Sounds_sounddata_t::has_pitch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_pitch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::pitch() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.pitch)
  return pitch_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_pitch(::google::protobuf::int32 value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.pitch)
}

// optional int32 flags = 10;
inline bool CSVCMsg_Sounds_sounddata_t::has_flags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_flags() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_flags() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.flags)
  return flags_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.flags)
}

// optional uint32 sound_num = 11;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num() {
  sound_num_ = 0u;
  clear_has_sound_num();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_num)
  return sound_num_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num(::google::protobuf::uint32 value) {
  set_has_sound_num();
  sound_num_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_num)
}

// optional fixed32 sound_num_handle = 12;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num_handle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_num_handle() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_num_handle() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num_handle() {
  sound_num_handle_ = 0u;
  clear_has_sound_num_handle();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num_handle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_num_handle)
  return sound_num_handle_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num_handle(::google::protobuf::uint32 value) {
  set_has_sound_num_handle();
  sound_num_handle_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_num_handle)
}

// optional int32 speaker_entity = 13;
inline bool CSVCMsg_Sounds_sounddata_t::has_speaker_entity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_speaker_entity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_speaker_entity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_speaker_entity() {
  speaker_entity_ = 0;
  clear_has_speaker_entity();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::speaker_entity() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.speaker_entity)
  return speaker_entity_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_speaker_entity(::google::protobuf::int32 value) {
  set_has_speaker_entity();
  speaker_entity_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.speaker_entity)
}

// optional int32 random_seed = 14;
inline bool CSVCMsg_Sounds_sounddata_t::has_random_seed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_random_seed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_random_seed() {
  random_seed_ = 0;
  clear_has_random_seed();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::random_seed() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.random_seed)
  return random_seed_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_random_seed(::google::protobuf::int32 value) {
  set_has_random_seed();
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.random_seed)
}

// optional int32 sound_level = 15;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_level() {
  sound_level_ = 0;
  clear_has_sound_level();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sound_level() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_level)
  return sound_level_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_level(::google::protobuf::int32 value) {
  set_has_sound_level();
  sound_level_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_level)
}

// optional bool is_sentence = 16;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_sentence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_is_sentence() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_is_sentence() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_sentence() {
  is_sentence_ = false;
  clear_has_is_sentence();
}
inline bool CSVCMsg_Sounds_sounddata_t::is_sentence() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.is_sentence)
  return is_sentence_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_sentence(bool value) {
  set_has_is_sentence();
  is_sentence_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.is_sentence)
}

// optional bool is_ambient = 17;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_ambient() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_is_ambient() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_is_ambient() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_ambient() {
  is_ambient_ = false;
  clear_has_is_ambient();
}
inline bool CSVCMsg_Sounds_sounddata_t::is_ambient() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.is_ambient)
  return is_ambient_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_ambient(bool value) {
  set_has_is_ambient();
  is_ambient_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.is_ambient)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds

// optional bool reliable_sound = 1;
inline bool CSVCMsg_Sounds::has_reliable_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds::set_has_reliable_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Sounds::clear_has_reliable_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Sounds::clear_reliable_sound() {
  reliable_sound_ = false;
  clear_has_reliable_sound();
}
inline bool CSVCMsg_Sounds::reliable_sound() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.reliable_sound)
  return reliable_sound_;
}
inline void CSVCMsg_Sounds::set_reliable_sound(bool value) {
  set_has_reliable_sound();
  reliable_sound_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.reliable_sound)
}

// repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
inline int CSVCMsg_Sounds::sounds_size() const {
  return sounds_.size();
}
inline void CSVCMsg_Sounds::clear_sounds() {
  sounds_.Clear();
}
inline const ::CSVCMsg_Sounds_sounddata_t& CSVCMsg_Sounds::sounds(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounds)
  return sounds_.Get(index);
}
inline ::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Sounds.sounds)
  return sounds_.Mutable(index);
}
inline ::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::add_sounds() {
  // @@protoc_insertion_point(field_add:CSVCMsg_Sounds.sounds)
  return sounds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >*
CSVCMsg_Sounds::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_Sounds.sounds)
  return &sounds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >&
CSVCMsg_Sounds::sounds() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_Sounds.sounds)
  return sounds_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NET_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NET_Messages>() {
  return ::NET_Messages_descriptor();
}
template <> struct is_proto_enum< ::SVC_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SVC_Messages>() {
  return ::SVC_Messages_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netmessages_5fpublic_2eproto__INCLUDED
